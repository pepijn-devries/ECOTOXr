[{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/ecotox-schema.html","id":"the-databases-relational-structure","dir":"Articles","previous_headings":"","what":"The database’s relational structure","title":"ECOTOX database schema","text":"diagram shows tables available ECOTOX database related. arrows labelled key field connects two tables. structure may seem bit intimidating realise tables relevant, can screen diagram focus. First , tables containing actual data coloured light yellow. tables (coloured light blue) contain lookup information. general users interested ‘tests’ table (describing test setup) ‘results’ table (describing test results). can also list tables database using DBI::dbListTables(). list table fields, can use list_ecotox_fields(\"\", FALSE). constructing query, ask information wish retrieve, restrict/filter data scope research? purpose, first focus yellow coloured tables, join information lookup tables required purpose.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/ecotox-schema.html","id":"setting-up-queries-some-examples","dir":"Articles","previous_headings":"","what":"Setting up queries: some examples","title":"ECOTOX database schema","text":"setting custom queries, recommend use tidyverse packages like dplyr. following examples dplyr package used construct queries. examples intend show diagram can used collect information database.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/ecotox-schema.html","id":"all-test-results-for-tests-carried-out-with-insecta","dir":"Articles","previous_headings":"Setting up queries: some examples","what":"All test results for tests carried out with Insecta","title":"ECOTOX database schema","text":"case want restrict data species class Insecta. can see diagram database schema, table ‘species’ directly linked results. Instead, linked table ‘tests’ turn linked ‘results’. means join data tables order, using appropriate keys.","code":"library(dplyr)  if (check_ecotox_availability()) {   con <- dbConnectEcotox()      insects <-     tbl(con, \"species\") |>     filter(class == \"Insecta\") |>     ## Specify which fields you want from the table.     ## Make sure to include the key that links with     ## other tables ('species_number')     select(species_number, common_name, latin_name)    } if (check_ecotox_availability()) {   results <-     insects |>          ## First join the 'tests' table          left_join(       tbl(con, \"tests\") |> select(test_id, species_number),       by = \"species_number\"     ) |>          ## Then join the 'results' table      left_join(       tbl(con, \"results\"),       by = \"test_id\"     ) |>          ## dplyr performs queries lazily, call     ## 'collect' to actually get the results          collect()    close(con) }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/ecotox-schema.html","id":"a-random-substance-and-random-species","dir":"Articles","previous_headings":"Setting up queries: some examples","what":"A random substance and random species","title":"ECOTOX database schema","text":"Although realistic case, example shows can pick chemical species see test results available combination. Note chance random chemical tested random species small. Therefore, cases example yield zero test results. point example can elegantly use different join types (like left, right, inner anti; see ?dplyr::join) efficiently join tables database. Note search_ecotox() creates query based provided search terms output fields, ‘blindly’ uses many left joins get information database. complex queries, efficient method obtain data database.","code":"if (check_ecotox_availability()) {   con <- dbConnectEcotox()      ## pick a random species   species <-     tbl(con, \"species\") |>     mutate(random = runif(n())) |>     slice_min(n = 1, order_by = random) |>     select(!random)      ## pick a random chemical   chem <-     tbl(con, \"chemicals\") |>     rename(test_cas = \"cas_number\") |>     mutate(random = runif(n())) |>     slice_min(n = 1, order_by = random) |>     select(!random)    ## join the randomly picked species and test chemical   ## with the 'tests' and 'results' table     results <-     tbl(con, \"tests\") |>     select(test_id, test_cas, species_number) |>     right_join(species,                by = \"species_number\") |>     right_join(chem,                by = \"test_cas\") |>     inner_join(tbl(con, \"results\") |>                  select(1:10),                by = \"test_id\") |>     collect()      close(con) }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/ecotox-schema.html","id":"dose-information","dir":"Articles","previous_headings":"Setting up queries: some examples","what":"Dose information","title":"ECOTOX database schema","text":"information one--one many--one relationship. case dose, many--many relationship tests therewith test results. means dose information one test joined test results, like example . Indeed, query yields multiple doses single test result. Depending wish process data, may want : aggregate; nest; pivot dose information single test results. using search_ecotox(), dose information automatically nested:","code":"if (check_ecotox_availability()) {   con <- dbConnectEcotox()      dose_info <-     tbl(con, \"doses\") |>     ## Let's select the dose information for the first test in the database     filter(test_id == 1) |>     left_join(tbl(con, \"dose_response_details\"), by = \"dose_id\") |>     left_join(tbl(con, \"dose_responses\"), by = c(\"dose_resp_id\", \"test_id\")) |>     left_join(tbl(con, \"dose_response_links\"), by = \"dose_resp_id\") |>     left_join(tbl(con, \"results\"), by = c(\"result_id\", \"test_id\")) |>     collect()    close(con) } ## In this example dose information is automatically nested if (check_ecotox_availability()) {   doses <-     search_ecotox(       list(         result_id = list(           terms = 1182449,           method = \"exact\")),       output_fields = c(\"results.result_id\", \"doses.dose_number\")) }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/ecotox-schema.html","id":"automatically-generating-queries","dir":"Articles","previous_headings":"","what":"Automatically generating queries","title":"ECOTOX database schema","text":"call search_query_ecotox() can retrieve SQL query underpinning search using search_ecotox(). pointed earlier, method generic may provide elegant query. can used inspiration understanding database.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/ecotox-schema.html","id":"overview-of-tables-and-fields","dir":"Articles","previous_headings":"","what":"Overview of tables and fields","title":"ECOTOX database schema","text":"table lists tables database fields. Primary foreign keys bold face. Use diagram see tables linked keys. table lists available fields table. Use EPA ECOTOX documentation provided downloaded data detailed information fields.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/reproducibility.html","id":"rules-of-thumb","dir":"Articles","previous_headings":"","what":"Rules of thumb","title":"Reproducibility","text":"De Vries (2024) provides rules thumb improving reproducibility research using ECOTOXr package. rules repeated explanation. Quoted text De Vries (2024): “… transparency reproducibility optimised :” “official package release CRAN repository used cited (including version package database used: cite_ecotox()).” using CRAN release ensure version use passed checks balances required CRAN submission. need latest features development version GitHub r-universe, refer mentioning ’s latest commit. also send request maintainer submit development version CRAN. “asserted local copy database clean unaltered (build fresh copy doubt using download_ecotox_data()).” locally built copy database ‘simple’ SQLite database located get_ecotox_path() (elsewhere specified user). package writes database building downloaded files. operations read-. However, nothing stopping user write database. fact, can considered one features package. allows add additional (meta)data database. , want ensure reproducibility, must make sure database corrupted data overwritten. words: careful. “non-accented alphanumerical characters used search terms (characters may reproduce well different systems).” text files used build local database assumed encoded UTF-8. parsing files non-convertable bytes substituted asterisk symbols. Furthermore, formulating search texts containing exotic characters may result platform-dependent results. using non-accented alphanumerical characters searches recommended. Just make sure… “scripting code used searching subsetting database documented includes database record identifiers (possibly date modified).” one seems obvious. want others reproduce work, provide R script used. Also, recording identifiers (‘result_id’, ‘test_id’, etc.) others can check working identical set results. also wise include information data last modified database. also affect results. details demonstrations using case studies, please read De Vries (2024).","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/sanitising-ecotox.html","id":"sanitising-units","dir":"Articles","previous_headings":"","what":"Sanitising units","title":"Sanitising ECOTOX","text":"Quantity units vital interpretation measurements. ECOTOX database contains units reported source publication. result, units often stored consistently standardised. ECOTOXr package implements function sanitises unit text fields parses units package. package provides instruments convert units using UNIDATA udunits library. advantage using units package provides mechanism apply arithmetic manipulations data conversion compatible units. documentation package puts : “used expression, automatically converts units, simplifies units results possible; case incompatible units, errors raised” goal sanitation steps create format can parsed units package. order achieve following steps performed: Annotations stripped (.e., prefixes suffixes units, indicating instance ‘active ingredient’, medium refers (e.g. soil), etc.) Ambiguous units like percentages ‘parts per …’ converted explicit units possible. possible recorded units indicate w/w, w/v, v/v v/w. conversion possible, unit kept . Units known interpreted incorrectly units package converted handled correctly. instance ‘C’ ECOTOX database frequently stands ‘degrees Celsius’ (although also used indicate Carbon). ’s annotation, ‘C’ replaced ‘Celsius’. Another example ‘sqft’ (square feet) can interpreted units package replaced ‘ft2’. Units reported interpretable set generic ‘unit’ (units::mixed_units(1, \"unit\")). documentation as_unit_ecotox() function detailed description cleanup procedure. need even details can check source code. order demonstrate unit sanitation works packages, let’s first initialise vector mishmash units. actually random sample ECOTOX database, necessarily common ones: as_unit_ecotox(), mishmash units, represented character strings cleaned coerced units::mixed_units(). units objects numeric component, character strings database , unit given value 1. can see units mishmash vector can interpreted just returned arbitrary 1 unit. process_ecotox_units() can process entire data.frame/tibble, column ending _unit processed (.e. as_unit_ecotox() called ). setting .names argument, can preserve original unit column:","code":"library(ECOTOXr) |> suppressMessages() library(dplyr)   |> suppressMessages()  mishmash <-   c(\"ppm-d\", \"ml/2.5 cm eu\", \"fl oz/10 gal/1k sqft\", \"kg/100 L\",     \"mopm\", \"ng/kg\", \"ug\", \"AI ng/g\", \"PH\", \"pm\", \"uM/cm3\", \"1e-4 mM\",     \"degree\", \"fs\", \"mg/TI\", \"RR\", \"ug/g org/d\", \"1e+4 IU/TI\", \"pg/mg TE\",     \"pmol/mg\", \"1e-9/l\", \"no >15 cm\", \"umol/mg pro\", \"cc/org/wk\", \"PIg/L\",     \"ug/100 ul/org\", \"ae mg/kg diet/d\", \"umol/mg/h\", \"cmol/kg d soil\",     \"ug/L diet\", \"kg/100 kg sd\", \"1e+6 cells\", \"ul diet\", \"S\", \"mmol/h/g TI\",     \"g/70 d\", \"vg\", \"ng/200 mg diet\", \"uS/cm2\", \"AI ml/ha\", \"AI pt/acre\",     \"mg P/h/g TI\", \"no/m\", \"kg/ton sd\", \"ug/g wet wt\", \"AI mg/2 L diet\",     \"nmol/TI\", \"umol/g wet wt\", \"PSU\", \"Wijs number\") as_unit_ecotox(mishmash, warn = FALSE) #> Mixed units: d*mg/L (1), ml/2.5cm (1), oz/1000ft2/10gal (1), kg/100L (1), month (1), ng/kg (1), ug (1), ng/g (1), unit (13), umol/cm3/L (1), 0.0001mmol/L (1), ° (1), ug/d/g (1), pg/mg (1), pmol/mg (1), umol/mg (1), counts/counts/week (1), ug/100ul/counts (1), mg/d/kg (1), umol/h/mg (1), cmol/kg (1), ug/L (1), kg/100kg (1), 1000000counts (1), ul (1), S (1), mmol/g/h (1), g/70d (1), ng/200mg (1), uS/cm2 (1), ml/ha (1), pt/acre (1), mg/g/h (1), counts/m (1), kg/ton (1), ug/g (1), mg/2L (1), umol/g (1)  #> 1 [d*mg/L], 1 [ml/2.5cm], 1 [oz/1000ft2/10gal], 1 [kg/100L], 1 [month], 1 [ng/kg], 1 [ug], 1 [ng/g], 1 [unit], 1 [unit], 1 [umol/cm3/L], 1 [0.0001mmol/L], 1 [°], 1 [unit], 1 [unit], 1 [unit], 1 [ug/d/g], 1 [unit], 1 [pg/mg], 1 [pmol/mg], 1 [unit], 1 [unit], 1 [umol/mg], 1 [counts/counts/week], 1 [unit], 1 [ug/100ul/counts], 1 [mg/d/kg], 1 [umol/h/mg], 1 [cmol/kg], 1 [ug/L], 1 [kg/100kg], 1 [1000000counts], 1 [ul], 1 [S], 1 [mmol/g/h], 1 [g/70d], 1 [unit], 1 [ng/200mg], 1 [uS/cm2], 1 [ml/ha], 1 [pt/acre], 1 [mg/g/h], 1 [counts/m], 1 [kg/ton], 1 [ug/g], 1 [mg/2L], 1 [unit], 1 [umol/g], 1 [unit], 1 [unit] tibble(mishmash_unit = mishmash) |>   process_ecotox_units(.names = \"{.col}_parsed\", warn = FALSE) #> # A tibble: 50 × 2 #>    mishmash_unit        mishmash_unit_parsed #>    <chr>                       <mixed_units> #>  1 ppm-d                          1 [d*mg/L] #>  2 ml/2.5 cm eu                 1 [ml/2.5cm] #>  3 fl oz/10 gal/1k sqft 1 [oz/1000ft2/10gal] #>  4 kg/100 L                      1 [kg/100L] #>  5 mopm                            1 [month] #>  6 ng/kg                           1 [ng/kg] #>  7 ug                                 1 [ug] #>  8 AI ng/g                          1 [ng/g] #>  9 PH                               1 [unit] #> 10 pm                               1 [unit] #> # ℹ 40 more rows"},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/sanitising-ecotox.html","id":"consequences-of-unit-sanitation","dir":"Articles","previous_headings":"Sanitising units","what":"Consequences of unit sanitation","title":"Sanitising ECOTOX","text":"database contains 6,000 unique unit codes, likely units processable. Also, codes always consistent, may interpreted correctly. frequently occurring units parse correctly. think specific code parsed correctly, highly outlandish, file issue report. Furthermore, always inspect automatically parsed units correctness. Another point attention removal annotations unit. Consider concentration unit following annotations: Note interpreted [mg/L]. Although technically unit, definitely directly compatible. units package support annotations, need keep track .","code":"as_unit_ecotox(c(\"mg/L CO3\", \"mg/L CaCO3\", \"mg/L HCO3\")) #> Mixed units: mg/L (3)  #> 1 [mg/L], 1 [mg/L], 1 [mg/L]"},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/sanitising-ecotox.html","id":"sanitising-numerics","dir":"Articles","previous_headings":"","what":"Sanitising numerics","title":"Sanitising ECOTOX","text":"First let explain meant ‘numerics’ ECOTOX database. records accompanying measurement unit database. includes, concentrations, durations many others. records stored text fields database. order interpret actual numerics R, need coerced numerics. use simple call .numeric() , always work. text fields may contain operators ‘<’, ‘>’, ‘~’, etc. think mistake design, many numeric fields corresponding operator field operator stored. Text fields can also contain labelling text (asterisk symbol) inconsistent decimal thousand separators. as_numeric_ecotox() first cleans text records coercing numerics: can use process_ecotox_numerics() process data.frame/tibble resulting search query. automatically applies as_numeric_ecotox() columns containing numeric information:","code":"## Text fields as possibly encountered in the database text_records <-   c(\"10\", \" 2\", \"3 \", \"~5\", \"9.2*\", \"2,33\",     \"2,333\", \"2.1(1.0 - 3.2)\", \"1-5\", \"1e-3\")    as_numeric_ecotox(text_records) #> Warning in as_numeric_ecotox(text_records): NAs introduced by coercion #>  [1]   10.000    2.000    3.000    5.000    9.200    2.330 2333.000    2.100 #>  [9]       NA    0.001 #> attr(,\"has_notation\") #>  [1] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE #> attr(,\"has_brackets\") #>  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE text_tbl <- tibble(conc1_mean = text_records)  process_ecotox_numerics(text_tbl, warn = FALSE) #> # A tibble: 10 × 1 #>    conc1_mean #>         <dbl> #>  1     10     #>  2      2     #>  3      3     #>  4      5     #>  5      9.2   #>  6      2.33  #>  7   2333     #>  8      2.1   #>  9     NA     #> 10      0.001"},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/sanitising-ecotox.html","id":"consequences-of-numeric-sanitation","dir":"Articles","previous_headings":"Sanitising numerics","what":"Consequences of numeric sanitation","title":"Sanitising ECOTOX","text":"indicated notations operators included numerics stripped cleaning process. notations operators potentially important interpretation values. may wise keep track . One way first trying coerce texts numerics .numeric() as_numeric_ecotox(). cases first returns NA latter returns value, likely contain notations operators (just inconsistently formatted). also use .names argument process_ecotox_numerics() rename numeric columns keep original text fields.","code":"process_ecotox_numerics(text_tbl, warn = FALSE, .names = \"{.col}_num\") |>   mutate(     test = is.na(as.numeric(conc1_mean)) &       !is.na(as_numeric_ecotox(conc1_mean, warn = FALSE))     ) #> Warning: There was 1 warning in `mutate()`. #> ℹ In argument: `test = &...`. #> Caused by warning: #> ! NAs introduced by coercion #> # A tibble: 10 × 3 #>    conc1_mean       conc1_mean_num test  #>    <chr>                     <dbl> <lgl> #>  1 \"10\"                     10     FALSE #>  2 \" 2\"                      2     FALSE #>  3 \"3 \"                      3     FALSE #>  4 \"~5\"                      5     TRUE  #>  5 \"9.2*\"                    9.2   TRUE  #>  6 \"2,33\"                    2.33  TRUE  #>  7 \"2,333\"                2333     TRUE  #>  8 \"2.1(1.0 - 3.2)\"          2.1   TRUE  #>  9 \"1-5\"                    NA     FALSE #> 10 \"1e-3\"                    0.001 FALSE"},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/sanitising-ecotox.html","id":"combining-numerics-with-units","dir":"Articles","previous_headings":"","what":"Combining numerics with units","title":"Sanitising ECOTOX","text":"steps show sanitise numerics units separately. order standardise numeric values specific unit, steps need combined. can achieved calling process_ecotox_numerics() add_units set TRUE. add corresponding units numeric value. still mixed units. calling mixed_to_single_unit() can convert values specific unit. Note example units can converted target unit \"ug/L\". concentrations ‘mol/L’ requires molar mass solute order convert. returned NA.","code":"tibble(   conc1_mean = c(\"1\", \"2\", \"5e-4\", \"0.2\"),   conc1_unit = c(\"mg/L\", \"M\", \"% w/v\", \"ppt w/v\") ) |>   process_ecotox_numerics(add_units = TRUE) |>   mutate(     conc1_mean_standard = mixed_to_single_unit(conc1_mean, \"ug/L\")   ) #> # A tibble: 4 × 3 #>      conc1_mean conc1_unit conc1_mean_standard #>   <mixed_units> <chr>                   [ug/L] #> 1      1 [mg/L] mg/L                      1000 #> 2     2 [mol/L] M                           NA #> 3  5e-04 [g/dL] % w/v                     5000 #> 4     0.2 [g/L] ppt w/v                 200000"},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/sanitising-ecotox.html","id":"sanitising-dates","dir":"Articles","previous_headings":"","what":"Sanitising dates","title":"Sanitising ECOTOX","text":"ECOTOX contains several date fields. can represent meta-information record (date created modified), administrative information (publication date), experimental information (application date). dates stored text database. records consistent complete, cleaning required coercing text Date object (?Date). example shows typical date formats encountered database coerce Date objects using as_date_ecotox(): date coerced one unspecified year. returned NA. can use process_ecotox_dates() process data.frame/tibble returned search query. Date columns automatically coerced as_date_ecotox(). Column names ending _date recognised date records.","code":"char_date <- c(\"5-19-1987   \", \"5/dd/2021\", \"3/19/yyyy\", \"1985\", \"mm/19/1999\",                \"October 2004\", \"nr/nr/2015\")  as_date_ecotox(char_date) #> [1] \"1987-05-19\" \"2021-05-01\" NA           \"1985-01-01\" \"1999-01-19\" #> [6] \"2004-10-01\" \"2015-01-01\" tibble(   my_date = char_date ) |>   process_ecotox_dates() #> # A tibble: 7 × 1 #>   my_date    #>   <date>     #> 1 1987-05-19 #> 2 2021-05-01 #> 3 NA         #> 4 1985-01-01 #> 5 1999-01-19 #> 6 2004-10-01 #> 7 2015-01-01"},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/searching-ecotox.html","id":"searching-the-local-database","dir":"Articles","previous_headings":"","what":"Searching the local database","title":"Searching ECOTOX","text":"Obviously, searching local database possible download build ready (see ?download_ecotox_data ?build_ecotox_sqlite). built, can queried ?search_ecotox. Search local database tests water flea Daphnia magna exposed benzene","code":"search_ecotox(   list(     latin_name    = list(terms = \"Daphnia magna\", method = \"exact\"),     chemical_name = list(terms = \"benzene\",       method = \"exact\")   ) )"},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/searching-ecotox.html","id":"three-ways-of-querying-the-local-database","dir":"Articles","previous_headings":"Searching the local database","what":"Three ways of querying the local database","title":"Searching ECOTOX","text":"Let’s look 3 different approaches retrieving specific record local database, using unique identifier result_id. first option use build search_ecotox function. uses simple R syntax allows search collect field table database. Furthermore, requested output fields automatically joined result without end-user needing know much database structure. Using prefab function search_ecotox packaged ECOTOXr approach shown provided user’s convenience. However, relatively blunt instrument. ’s hammer, fine nails, less effective screws. cases efficient create custom query specific needs. cases can use two different strategies, involving either tidyverse verbs simple query language (SQL). like use dplyr verbs, luck. SQLite database can approached using dplyr verbs. approach return information results table. end-user join information (like test species test substance) manually. require knowledge database structure (see vignette(\"ecotox-schema\")). Using dplyr verbs prefer working using SQL directly, fine . RSQLite package allows get queries using SQL statements. result identical previous approach. end-user needs knowledge database structure order join additional data. details see vignette(\"ecotox-schema\"), shows database structure provides clues construct custom queries dplyr. Using SQL syntax three approaches shown generate identical results. Although, first additional information joined automatically.","code":"search_ecotox(   list(     result_id = list(terms = \"401386\", method = \"exact\")   ),   as_data_frame = F ) con <- dbConnectEcotox() dplyr::tbl(con, \"results\") |>   dplyr::filter(result_id == \"401386\") |>   dplyr::collect() dbGetQuery(con, \"SELECT * FROM results WHERE result_id='401386'\") |>   dplyr::as_tibble()"},{"path":"https://pepijn-devries.github.io/ECOTOXr/articles/searching-ecotox.html","id":"searching-the-online-database","dir":"Articles","previous_headings":"","what":"Searching the online database","title":"Searching ECOTOX","text":"can also use package search using online webform: aiming reproducibility better query local database, online tool may able search export fields; data may change beyond control; processed server forms black box. See also vignette(\"reproducibility\").","code":"tryCatch({   search_fields <-     list_ecotox_web_fields(       txAdvancedSpecEntries     = \"daphnia magna\",       RBSPECSEARCHTYPE          = \"EXACT\",       txAdvancedChemicalEntries = \"benzene\",       RBCHEMSEARCHTYPE          = \"EXACT\")    search_results <- websearch_ecotox(search_fields, verify_ssl = FALSE)    search_results$`Aquatic-Export` }) #> # A tibble: 56 × 87 #>    `CAS Number` `Chemical Name` `Chemical Grade` `Chemical Analysis` #>           <dbl> <chr>           <chr>            <chr>               #>  1        71432 Benzene         NA               NA                  #>  2        71432 Benzene         NA               NA                  #>  3        71432 Benzene         NA               Unmeasured          #>  4        71432 Benzene         NA               Unmeasured          #>  5        71432 Benzene         NA               Unmeasured          #>  6        71432 Benzene         NA               Unmeasured          #>  7        71432 Benzene         NA               Unmeasured          #>  8        71432 Benzene         NA               Measured            #>  9        71432 Benzene         NA               Unmeasured          #> 10        71432 Benzene         NA               Unmeasured          #> # ℹ 46 more rows #> # ℹ 83 more variables: `Chemical Purity Mean Op` <chr>, #> #   `Chemical Purity Mean(%)` <dbl>, `Chemical Purity Min Op` <lgl>, #> #   `Chemical Purity Min(%)` <lgl>, `Chemical Purity Max Op` <lgl>, #> #   `Chemical Purity Max(%)` <lgl>, `Species Scientific Name` <chr>, #> #   `Species Common Name` <chr>, `Species Group` <chr>, #> #   `Organism Lifestage` <chr>, `Organism Age Mean Op` <chr>, …"},{"path":"https://pepijn-devries.github.io/ECOTOXr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pepijn de Vries. Author, maintainer, data contributor.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"de Vries P (2024). “ECOTOXr: R package reproducible transparent retrieval data EPA's ECOTOX database.” Chemosphere, 364, 143078. doi:10.1016/j.chemosphere.2024.143078.","code":"@Article{,   title = {ECOTOXr: An R package for reproducible and transparent retrieval of data from EPA's ECOTOX database},   author = {P. {de Vries}},   journal = {Chemosphere},   year = {2024},   volume = {364},   pages = {143078},   doi = {10.1016/j.chemosphere.2024.143078}, }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/index.html","id":"ecotoxr","dir":"","previous_headings":"","what":"Download and Extract Data from US EPA's ECOTOX Database","title":"Download and Extract Data from US EPA's ECOTOX Database","text":"ECOTOXr can used explore analyse data US EPA ECOTOX database. specifically can: Build local SQLite copy US EPA ECOTOX database Search extract data local database Sanitise raw data local database Use experimental features search online dashboards: ECOTOX CompTox","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/index.html","id":"why-use-ecotoxr","dir":"","previous_headings":"","what":"Why use ECOTOXr?","title":"Download and Extract Data from US EPA's ECOTOX Database","text":"ECOTOXr package allows search extract data ECOTOXicological Knowledgebase import directly R. allow formalize document search- extract-procedures R code. makes easier share reproduce procedures results. illustrated graphical abstract . Moreover, can directly apply statistical analysis offered R. De Vries et al. (2024); Creative commons","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download and Extract Data from US EPA's ECOTOX Database","text":"Get CRAN version Get development version r-universe","code":"install.packages(\"ECOTOXr\") install.packages(\"ECOTOXr\", repos = c(\"https://pepijn-devries.r-universe.dev\", \"https://cloud.r-project.org\"))"},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/index.html","id":"preparing-the-database","dir":"","previous_headings":"Usage","what":"Preparing the database","title":"Download and Extract Data from US EPA's ECOTOX Database","text":"Although ECOTOXr experimental features search online database. package reach full potential build copy database local machine. Download build local copy latest ASCII export US EPA ECOTOX database","code":"download_ecotox_data()"},{"path":"https://pepijn-devries.github.io/ECOTOXr/index.html","id":"searching-the-local-database-for-species-and-substances","dir":"","previous_headings":"Usage","what":"Searching the local database for species and substances","title":"Download and Extract Data from US EPA's ECOTOX Database","text":"built, can search local database species substances using different strategies. can use build-search function package, can write custom queries using either simple query language (SQL) dplyr verbs. details following vignettes: vignette(\"searching-ecotox\") vignette(\"ecotox-schema\").","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/index.html","id":"disclaimers","dir":"","previous_headings":"","what":"Disclaimers","title":"Download and Extract Data from US EPA's ECOTOX Database","text":"end-users responsibility check quality collected data, using original referenced source order evaluate fitness use, see also: https://cfpub.epa.gov/ecotox/help.cfm#info-limitations. Note package maintainer affiliated US EPA, package therefore official US EPA software.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Download and Extract Data from US EPA's ECOTOX Database","text":"De Vries, P. (2024) ECOTOXr: R package reproducible transparent retrieval data EPA’s ECOTOX database. Chemosphere 364 143078 https://doi.org/10.1016/j.chemosphere.2024.143078 Manual CRAN release EPA ECOTOX help https://cfpub.epa.gov/ecotox/help.cfm Olker, Jennifer H.; Elonen, Colleen M.; Pilli, Anne; Anderson, Arne; Kinziger, Brian; Erickson, Stephen; Skopinski, Michael; Pomplun, Anita; LaLone, Carlie .; Russom, Christine L.; Hoff, Dale. (2022): ECOTOXicology Knowledgebase: Curated Database Ecologically Relevant Toxicity Tests Support Environmental Research Risk Assessment. Environmental Toxicology Chemistry 41(6) 1520-1539 https://doi.org/10.1002/etc.5324","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/ECOTOXr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Package description — ECOTOXr-package","title":"Package description — ECOTOXr-package","text":"Everything need know start using ECOTOXr package.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/ECOTOXr-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Package description — ECOTOXr-package","text":"ECOTOXr provides means efficiently search, extract analyse US EPA ECOTOX data, focus reproducible results. Although package creator/maintainer confident quality software, end users sole responsibility assure quality work using software. per provided license terms package maintainer liable damage resulting usage. said, present tips generating reproducible results package.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/ECOTOXr-package.html","id":"how-do-i-get-started-","dir":"Reference","previous_headings":"","what":"How do I get started?","title":"Package description — ECOTOXr-package","text":"Installing package first step get things started. need perform following steps order use package full capacity. First download copy complete EPA database. can done calling download_ecotox_data(). may always work machines R always accept website SSL certificate EPA. cases zipped archive database files can downloaded manually different (forgiving) browser. files zip archive can extracted location choice. Alternatively, user try use [download_ecotox_data](ssl_verifypeer = 0L) download URL trusted. Next, SQLite database needs build downloaded files. done automatically used download_ecotox_data() previous step. manually downloaded files can call build_ecotox_sqlite() build database locally. previous steps performed successfully, can now search database calling search_ecotox(). can also use dbConnectEcotox() open connection database. can query database using connection methods provided DBI RSQLite packages.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/ECOTOXr-package.html","id":"how-do-i-obtain-reproducible-results-","dir":"Reference","previous_headings":"","what":"How do I obtain reproducible results?","title":"Package description — ECOTOXr-package","text":"individual user responsible evaluating reproducibility work. Although package offers instruments achieve reproducibility, guaranteed. order increase chances generating reproducible results, one adhere least following rules: Always use official release CRAN, cite version used analyses (citation(\"ECOTOXr\")). Different versions, may produce different end results (although strive backward compatibility). Make sure working clean (unaltered) version database. doubt, download build fresh copy database (download_ecotox_data()). Also cite (release) version downloaded database (cite_ecotox()), system operating system local database build get_ecotox_info()). , just make sure never modify database (e.g., write data , delete data , etc.) order avoid platform dependencies advised include non-accented alpha-numerical characters search terms. See also search_ecotox build_ecotox_sqlite. trying reproduce database extractions earlier database releases, filter additions specific release. can done adding output fields 'tests.modified_date', 'tests.created_date' 'tests.published_date' search compare release date database trying reproduce results .","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/ECOTOXr-package.html","id":"why-isn-t-the-database-included-in-the-package-","dir":"Reference","previous_headings":"","what":"Why isn't the database included in the package?","title":"Package description — ECOTOXr-package","text":"package come bundled copy database needs downloaded first time package used. ? several reasons: database maintained updated US EPA. process outside sphere influence package maintainer. Packages CRAN allowed contain large amounts data. Publication CRAN key control quality package therefore outweighs convenience data bundled package. user full control release version database used.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/ECOTOXr-package.html","id":"why-does-this-package-promotes-using-a-local-copy-of-the-ecotox-database-","dir":"Reference","previous_headings":"","what":"Why does this package promotes using a local copy of the ECOTOX database?","title":"Package description — ECOTOXr-package","text":"Although package offers experimental features searching online, several reasons opted creating local copy: user restricted search options provided website (ECOTOX). online database come API allow convenient interface. features implemented package experimental. user limited internet connection bandwidth. database fields, limited number records, can retrieved online interface.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/ECOTOXr-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Package description — ECOTOXr-package","text":"Official US EPA ECOTOX website: https://cfpub.epa.gov/ecotox/ Olker, J.H., Elonen, C.M., Pilli, ., Anderson, ., Kinziger, B., Erickson, S., Skopinski, M., Pomplun, ., LaLone, C.., Russom, C.L. Hoff, D. (2022), ECOTOXicology Knowledgebase: Curated Database Ecologically Relevant Toxicity Tests Support Environmental Research Risk Assessment. Environ Toxicol Chem, 41: 1520-1539.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/ECOTOXr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Package description — ECOTOXr-package","text":"Maintainer: Pepijn de Vries pepijn.devries@outlook.com (ORCID) [data contributor]","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_date_ecotox.html","id":null,"dir":"Reference","previous_headings":"","what":"Values represented by ECOTOX character to dates — as_date_ecotox","title":"Values represented by ECOTOX character to dates — as_date_ecotox","text":"Similar .Date(), also performs text sanitising coercing text dates.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_date_ecotox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Values represented by ECOTOX character to dates — as_date_ecotox","text":"","code":"as_date_ecotox(x, dd = 1L, mm = 1L, nr = 1L, ..., warn = TRUE)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_date_ecotox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Values represented by ECOTOX character to dates — as_date_ecotox","text":"x vector character strings. expects fields commonly returned ECOTOX database. dd Replacement values unspecified days date. Defaults 1L. want dates unspecified days result NA, use dd = -1L. mm Replacement values unspecified months date. Defaults 1L. want dates unspecified months result NA, use mm = -1L. nr Replacement values generically unspecified values date. Defaults 1L. want dates unspecified values result NA, use nr = -1L. ... Passed .Date(). warn set FALSE warnings converting text dates suppressed.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_date_ecotox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Values represented by ECOTOX character to dates — as_date_ecotox","text":"vector Date class objects length x.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_date_ecotox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Values represented by ECOTOX character to dates — as_date_ecotox","text":"following steps performed (order listed) sanitise text coercing numerics: Trim whitespaces Replace hyphens forward slashes Replace double forward slashes, forward slashes followed zero spaces, single forward slash Replace \"mm\" \"dd\" (case insensitive) value specified argument. Add forward slash missing. Treat \"na\", \"nr\", \"xx\" \"00\" (case insensitive) unreported values followed forward slash. Replace nr argument Remove alphabetical characters directly followed numerical character. Replace literal month names numerical calendar value (1-12). date consists one value, assume calender year add dd mm day month value. date consists two numbers, assume month, followed year. case insert dd value day. responsibility check sanitising steps appropriate analyses.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_date_ecotox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Values represented by ECOTOX character to dates — as_date_ecotox","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_date_ecotox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Values represented by ECOTOX character to dates — as_date_ecotox","text":"","code":"## a vector of commonly used notations in the database to represent ## dates. Most frequent format is %m/%d/%Y char_date <- c(\"5-19-1987   \", \"5/dd/2021\", \"3/19/yyyy\", \"1985\", \"mm/19/1999\",                \"October 2004\", \"nr/nr/2015\")  as_date_ecotox(char_date) #> [1] \"1987-05-19\" \"2021-05-01\" NA           \"1985-01-01\" \"1999-01-19\" #> [6] \"2004-10-01\" \"2015-01-01\"  ## Set unspecified days to 15: as_date_ecotox(char_date, dd = 15L) #> [1] \"1987-05-19\" \"2021-05-15\" NA           \"1985-01-15\" \"1999-01-19\" #> [6] \"2004-10-15\" \"2015-01-01\"  ## Unspecified days should result in NA: as_date_ecotox(char_date, dd = -1L) #> [1] \"1987-05-19\" NA           NA           NA           \"1999-01-19\" #> [6] NA           \"2015-01-01\"  ## Set unspecified months to 6: as_date_ecotox(char_date, mm = 6L) #> [1] \"1987-05-19\" \"2021-05-01\" NA           \"1985-06-01\" \"1999-06-19\" #> [6] \"2004-10-01\" \"2015-01-01\"  ## Set generically unspecified value to 6: as_date_ecotox(char_date, nr = 6L) #> [1] \"1987-05-19\" \"2021-05-01\" NA           \"1985-01-01\" \"1999-01-19\" #> [6] \"2004-10-01\" \"2015-06-06\""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_numeric_ecotox.html","id":null,"dir":"Reference","previous_headings":"","what":"Values represented by ECOTOX character to numeric — as_numeric_ecotox","title":"Values represented by ECOTOX character to numeric — as_numeric_ecotox","text":"Similar .numeric(), also performs text sanitising coercing text numerics.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_numeric_ecotox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Values represented by ECOTOX character to numeric — as_numeric_ecotox","text":"","code":"as_numeric_ecotox(x, range_fun = NULL, ..., warn = TRUE)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_numeric_ecotox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Values represented by ECOTOX character to numeric — as_numeric_ecotox","text":"x vector character strings. expects fields commonly returned ECOTOX database. range_fun Function summarise range values. NULL range values returned NA ... Arguments passed range_fun. warn set FALSE warnings converting text numerics suppressed.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_numeric_ecotox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Values represented by ECOTOX character to numeric — as_numeric_ecotox","text":"vector numeric values length x.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_numeric_ecotox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Values represented by ECOTOX character to numeric — as_numeric_ecotox","text":"following steps performed sanitise text coercing numerics: Notes labelled \"x\" \"\\*\" removed. Operators (\">\", \">=\", \"<\", \"<=\", \"~\", \"=\", \"ca\", \"er\") removed. Text brackets (\"()\") removed (including brackets) Comma's considered thousand separator located fourth character (right) removed. Comma's location assumed decimal separator replaced period. hyphen present (preceded \"\"e\" \"E\") probably representing range values. range_fun NULL result NA. Otherwise, numbers split hyphen aggregated range_fun responsibility check sanitising steps appropriate analyses.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_numeric_ecotox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Values represented by ECOTOX character to numeric — as_numeric_ecotox","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_numeric_ecotox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Values represented by ECOTOX character to numeric — as_numeric_ecotox","text":"","code":"## a vector of commonly used notations in the database to represent ## numeric values  char_num <- c(\"10\", \" 2\", \"3 \", \"~5\", \"9.2*\", \"2,33\",               \"2,333\", \"2.1(1.0 - 3.2)\", \"1-5\", \"1e-3\")  ## Text fields reported as ranges are returned as `NA`: as_numeric_ecotox(char_num, warn = FALSE) #>  [1]   10.000    2.000    3.000    5.000    9.200    2.330 2333.000    2.100 #>  [9]       NA    0.001 #> attr(,\"has_notation\") #>  [1] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE #> attr(,\"has_brackets\") #>  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  ## Text fields reported as ranges are processed with `range_fun` as_numeric_ecotox(char_num, range_fun = median) #>  [1]   10.000    2.000    3.000    5.000    9.200    2.330 2333.000    2.100 #>  [9]    3.000    0.001 #> attr(,\"has_notation\") #>  [1] FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE #> attr(,\"has_brackets\") #>  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_unit_ecotox.html","id":null,"dir":"Reference","previous_headings":"","what":"Text from the ECOTOX database to mixed_units — as_unit_ecotox","title":"Text from the ECOTOX database to mixed_units — as_unit_ecotox","text":"Convert text units sanitising.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_unit_ecotox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text from the ECOTOX database to mixed_units — as_unit_ecotox","text":"","code":"as_unit_ecotox(   x,   type = c(\"concentration\", \"duration\", \"length\", \"media\", \"application\", \"size\",     \"weight\", \"unknown\"),   ...,   warn = TRUE )"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_unit_ecotox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text from the ECOTOX database to mixed_units — as_unit_ecotox","text":"x vector character strings. expects fields commonly returned ECOTOX database. type type unit can help sanitation process. See 'usage' section available options. options linked different unit tables database (see vignette(\"ecotox-schema\")). can help interpret ambiguous units correctly. instance, 'dpm' can mean 'disintegrations per minute' (type = \"concentration\") 'days post-moult' (type = \"duration\"). ... Ignored. warn set FALSE warnings converting text units suppressed.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_unit_ecotox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Text from the ECOTOX database to mixed_units — as_unit_ecotox","text":"vector ?units::unit class objects length x.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_unit_ecotox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Text from the ECOTOX database to mixed_units — as_unit_ecotox","text":"following steps performed (order listed) sanitise text coercing units: following removed: Leading/trailing white spaces Square brackets commas list common prefixes Double spaces replaced single spaces Brackets around multiply symbol following corrected/adjusted: '' interpreted multiplication Scientific notation numbers standardised possible. list ambiguous patterns replaced explicit strings. instance, 'deg' replaced 'degree'. following miscellaneous corrections made: list 'known' annotations removed units list elements kown represent counts renamed 'counts'. Percentages renamed explicit concentration mass per volume volume per volume units possible 'CI' renamed 'Curies'. 'M' renamed 'mol/L'. Units expressed 'parts per ...' explicitly renamed mass volume, volum volume possible Type specific sanitation steps Concentration units: 'K' renamed 'Karmen' 'dpm' renamed 'counts/min' (.e., disintegrations per minute) Media units: 'K' renamed 'Kelvin' 'C' renamed 'Celsius' final miscellaneous adjustments: Scientific notation numbers supported units package. Numbers formatted decimal notation possible. Spaces removed preceded numeric followed alphabetical character equivalents ambiguous synonyms time units explicitly renamed respective unit (e.g., 'dph' (days post hatching) -> 'day') unreported/missing units renamed 'unit' responsibility check sanitising steps appropriate analyses.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_unit_ecotox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Text from the ECOTOX database to mixed_units — as_unit_ecotox","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/as_unit_ecotox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Text from the ECOTOX database to mixed_units — as_unit_ecotox","text":"","code":"## Try parsing a random set of units from the database: c(\"ppm-d\", \"ml/2.5 cm eu\", \"fl oz/10 gal/1k sqft\", \"kg/100 L\",   \"mopm\", \"ng/kg\", \"ug\", \"AI ng/g\", \"PH\", \"pm\", \"uM/cm3\", \"1e-4 mM\",   \"degree\", \"fs\", \"mg/TI\", \"RR\", \"ug/g org/d\", \"1e+4 IU/TI\", \"pg/mg TE\",   \"pmol/mg\", \"1e-9/l\", \"no >15 cm\", \"umol/mg pro\", \"cc/org/wk\", \"PIg/L\",   \"ug/100 ul/org\", \"ae mg/kg diet/d\", \"umol/mg/h\", \"cmol/kg d soil\",   \"ug/L diet\", \"kg/100 kg sd\", \"1e+6 cells\", \"ul diet\", \"S\", \"mmol/h/g TI\",   \"g/70 d\", \"vg\", \"ng/200 mg diet\", \"uS/cm2\", \"AI ml/ha\", \"AI pt/acre\",   \"mg P/h/g TI\", \"no/m\", \"kg/ton sd\", \"ug/g wet wt\", \"AI mg/2 L diet\",   \"nmol/TI\", \"umol/g wet wt\", \"PSU\", \"Wijs number\") |>   as_unit_ecotox(warn = FALSE) #> Mixed units: d*mg/L (1), ml/2.5cm (1), oz/1000ft2/10gal (1), kg/100L (1), month (1), ng/kg (1), ug (1), ng/g (1), unit (13), umol/L/cm3 (1), 0.0001mmol/L (1), ° (1), ug/d/g (1), pg/mg (1), pmol/mg (1), umol/mg (1), counts/counts/week (1), ug/100ul/counts (1), mg/d/kg (1), umol/h/mg (1), cmol/kg (1), ug/L (1), kg/100kg (1), 1000000counts (1), ul (1), S (1), mmol/g/h (1), g/70d (1), ng/200mg (1), uS/cm2 (1), ml/ha (1), pt/acre (1), mg/g/h (1), counts/m (1), kg/ton (1), ug/g (1), mg/2L (1), umol/g (1)  #> 1 [d*mg/L], 1 [ml/2.5cm], 1 [oz/1000ft2/10gal], 1 [kg/100L], 1 [month], 1 [ng/kg], 1 [ug], 1 [ng/g], 1 [unit], 1 [unit], 1 [umol/L/cm3], 1 [0.0001mmol/L], 1 [°], 1 [unit], 1 [unit], 1 [unit], 1 [ug/d/g], 1 [unit], 1 [pg/mg], 1 [pmol/mg], 1 [unit], 1 [unit], 1 [umol/mg], 1 [counts/counts/week], 1 [unit], 1 [ug/100ul/counts], 1 [mg/d/kg], 1 [umol/h/mg], 1 [cmol/kg], 1 [ug/L], 1 [kg/100kg], 1 [1000000counts], 1 [ul], 1 [S], 1 [mmol/g/h], 1 [g/70d], 1 [unit], 1 [ng/200mg], 1 [uS/cm2], 1 [ml/ha], 1 [pt/acre], 1 [mg/g/h], 1 [counts/m], 1 [kg/ton], 1 [ug/g], 1 [mg/2L], 1 [unit], 1 [umol/g], 1 [unit], 1 [unit]   ## Adding the type of measurement can affect interpretation: as_unit_ecotox(c(\"C\", \"K\"), type = \"concentration\") #> Mixed units: C (1), unit (1)  #> 1 [C], 1 [unit]  as_unit_ecotox(c(\"C\", \"K\"), type = \"media\") #> Mixed units: °C (1), K (1)  #> 1 [°C], 1 [K]"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/build_ecotox_sqlite.html","id":null,"dir":"Reference","previous_headings":"","what":"Build an SQLite database from zip archived tables downloaded from EPA website — build_ecotox_sqlite","title":"Build an SQLite database from zip archived tables downloaded from EPA website — build_ecotox_sqlite","text":"function called automatically download_ecotox_data(). database files can also downloaded manually EPA website local database can build using function.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/build_ecotox_sqlite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build an SQLite database from zip archived tables downloaded from EPA website — build_ecotox_sqlite","text":"","code":"build_ecotox_sqlite(source, destination = get_ecotox_path(), write_log = TRUE)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/build_ecotox_sqlite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build an SQLite database from zip archived tables downloaded from EPA website — build_ecotox_sqlite","text":"source character string pointing directory path text files raw tables located. can obtained extracting zip archive https://cfpub.epa.gov/ecotox/ look 'Download ASCII Data'. destination character string representing destination path SQLite file. default get_ecotox_path(). write_log logical value indicating whether log file written destination path TRUE. log contains information source destination path, version package, creation date, operating system database created.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/build_ecotox_sqlite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build an SQLite database from zip archived tables downloaded from EPA website — build_ecotox_sqlite","text":"Returns NULL invisibly.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/build_ecotox_sqlite.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build an SQLite database from zip archived tables downloaded from EPA website — build_ecotox_sqlite","text":"Raw data downloaded EPA website efficient work R. files large put large strain R loading completely system's memory. Instead use function build SQLite database tables. way, data can queried without load memory. EPA provides raw table ECOTOX database text files pipe-characters ('|') table column separators. Although documented, tables appear contain comment quotation characters. records containing reserved pipe-character confuse table parser. records, pipe-character replaced dash character ('-'). addition, reading tables text files, package attempts decode text UTF8. Unfortunately, process appears platform-dependent, may therefore result different end-results different platforms. problem seems occur characters listed 'control characters' UTF8. consequences reproducibility, build search queries look special characters. therefore advised stick common (non-accented) alpha-numerical characters searches, sake reproducibility. Use 'suppressMessages()' suppress progress report.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/build_ecotox_sqlite.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Build an SQLite database from zip archived tables downloaded from EPA website — build_ecotox_sqlite","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/build_ecotox_sqlite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build an SQLite database from zip archived tables downloaded from EPA website — build_ecotox_sqlite","text":"","code":"source_path <- tempfile() dir.create(source_path)  ## This is a small mockup file resembling the larger zip ## files that can be downloaded with `download_ecotox_data()`:  source_file <- system.file(\"ecotox-test.zip\", package = \"ECOTOXr\")  unzip(source_file, exdir = source_path)  build_ecotox_sqlite(source_path, tempdir()) #> Adding 'application_frequency_codes' table (1/50) to database: #>  #>    0 lines (incl. header) of 'application_frequency_codes' added to database #>   230 lines (incl. header) of 'application_frequency_codes' added to database #>  Done #>  #> Adding 'application_type_codes' table (2/50) to database: #>  #>    0 lines (incl. header) of 'application_type_codes' added to database #>   22 lines (incl. header) of 'application_type_codes' added to database #>  Done #>  #> Adding 'chemical_analysis_codes' table (3/50) to database: #>  #>    0 lines (incl. header) of 'chemical_analysis_codes' added to database #>   10 lines (incl. header) of 'chemical_analysis_codes' added to database #>  Done #>  #> Adding 'chemical_carriers' table (4/50) to database: #>  #>    0 lines (incl. header) of 'chemical_carriers' added to database #>   5 lines (incl. header) of 'chemical_carriers' added to database #>  Done #>  #> Adding 'chemical_formulation_codes' table (5/50) to database: #>  #>    0 lines (incl. header) of 'chemical_formulation_codes' added to database #>   89 lines (incl. header) of 'chemical_formulation_codes' added to database #>  Done #>  #> Adding 'chemical_grade_codes' table (6/50) to database: #>  #>    0 lines (incl. header) of 'chemical_grade_codes' added to database #>   113 lines (incl. header) of 'chemical_grade_codes' added to database #>  Done #>  #> Adding 'chemicals' table (7/50) to database: #>  #>    0 lines (incl. header) of 'chemicals' added to database #>   23 lines (incl. header) of 'chemicals' added to database #>  Done #>  #> Adding 'concentration_type_codes' table (8/50) to database: #>  #>    0 lines (incl. header) of 'concentration_type_codes' added to database #>   11 lines (incl. header) of 'concentration_type_codes' added to database #>  Done #>  #> Adding 'concentration_unit_codes' table (9/50) to database: #>  #>    0 lines (incl. header) of 'concentration_unit_codes' added to database #>   20 lines (incl. header) of 'concentration_unit_codes' added to database #>  Done #>  #> Adding 'control_type_codes' table (10/50) to database: #>  #>    0 lines (incl. header) of 'control_type_codes' added to database #>   16 lines (incl. header) of 'control_type_codes' added to database #>  Done #>  #> Adding 'dose_response_details' table (11/50) to database: #>  #>    0 lines (incl. header) of 'dose_response_details' added to database #>   1 lines (incl. header) of 'dose_response_details' added to database #>  Done #>  #> Adding 'dose_response_links' table (12/50) to database: #>  #>    0 lines (incl. header) of 'dose_response_links' added to database #>   1 lines (incl. header) of 'dose_response_links' added to database #>  Done #>  #> Adding 'dose_responses' table (13/50) to database: #>  #>    0 lines (incl. header) of 'dose_responses' added to database #>   1 lines (incl. header) of 'dose_responses' added to database #>  Done #>  #> Adding 'dose_stat_method_codes' table (14/50) to database: #>  #>    0 lines (incl. header) of 'dose_stat_method_codes' added to database #>   10 lines (incl. header) of 'dose_stat_method_codes' added to database #>  Done #>  #> Adding 'doses' table (15/50) to database: #>  #>    0 lines (incl. header) of 'doses' added to database #>   1 lines (incl. header) of 'doses' added to database #>  Done #>  #> Adding 'duration_unit_codes' table (16/50) to database: #>  #>    0 lines (incl. header) of 'duration_unit_codes' added to database #>   175 lines (incl. header) of 'duration_unit_codes' added to database #>  Done #>  #> Adding 'effect_codes' table (17/50) to database: #>  #>    0 lines (incl. header) of 'effect_codes' added to database #>   49 lines (incl. header) of 'effect_codes' added to database #>  Done #>  #> Adding 'endpoint_assigned_codes' table (18/50) to database: #>  #>    0 lines (incl. header) of 'endpoint_assigned_codes' added to database #>   7 lines (incl. header) of 'endpoint_assigned_codes' added to database #>  Done #>  #> Adding 'endpoint_codes' table (19/50) to database: #>  #>    0 lines (incl. header) of 'endpoint_codes' added to database #>   8 lines (incl. header) of 'endpoint_codes' added to database #>  Done #>  #> Adding 'exposure_type_codes' table (20/50) to database: #>  #>    0 lines (incl. header) of 'exposure_type_codes' added to database #>   117 lines (incl. header) of 'exposure_type_codes' added to database #>  Done #>  #> Adding 'field_study_type_codes' table (21/50) to database: #>  #>    0 lines (incl. header) of 'field_study_type_codes' added to database #>   11 lines (incl. header) of 'field_study_type_codes' added to database #>  Done #>  #> Adding 'gender_codes' table (22/50) to database: #>  #>    0 lines (incl. header) of 'gender_codes' added to database #>   7 lines (incl. header) of 'gender_codes' added to database #>  Done #>  #> Adding 'geographic_codes' table (23/50) to database: #>  #>    0 lines (incl. header) of 'geographic_codes' added to database #>   249 lines (incl. header) of 'geographic_codes' added to database #>  Done #>  #> Adding 'habitat_codes' table (24/50) to database: #>  #>    0 lines (incl. header) of 'habitat_codes' added to database #>   13 lines (incl. header) of 'habitat_codes' added to database #>  Done #>  #> Adding 'ion_codes' table (25/50) to database: #>  #>    0 lines (incl. header) of 'ion_codes' added to database #>   187 lines (incl. header) of 'ion_codes' added to database #>  Done #>  #> Adding 'length_type_codes' table (26/50) to database: #>  #>    0 lines (incl. header) of 'length_type_codes' added to database #>   13 lines (incl. header) of 'length_type_codes' added to database #>  Done #>  #> Adding 'length_unit_codes' table (27/50) to database: #>  #>    0 lines (incl. header) of 'length_unit_codes' added to database #>   7 lines (incl. header) of 'length_unit_codes' added to database #>  Done #>  #> Adding 'lifestage_codes' table (28/50) to database: #>  #>    0 lines (incl. header) of 'lifestage_codes' added to database #>   139 lines (incl. header) of 'lifestage_codes' added to database #>  Done #>  #> Adding 'measurement_codes' table (29/50) to database: #>  #>    0 lines (incl. header) of 'measurement_codes' added to database #>   10 lines (incl. header) of 'measurement_codes' added to database #>  Done #>  #> Adding 'media_char_unit_codes' table (30/50) to database: #>  #>    0 lines (incl. header) of 'media_char_unit_codes' added to database #>   172 lines (incl. header) of 'media_char_unit_codes' added to database #>  Done #>  #> Adding 'media_characteristics' table (31/50) to database: #>  #>    0 lines (incl. header) of 'media_characteristics' added to database #>   21 lines (incl. header) of 'media_characteristics' added to database #>  Done #>  #> Adding 'media_type_codes' table (32/50) to database: #>  #>    0 lines (incl. header) of 'media_type_codes' added to database #>   25 lines (incl. header) of 'media_type_codes' added to database #>  Done #>  #> Adding 'organic_matter_type_codes' table (33/50) to database: #>  #>    0 lines (incl. header) of 'organic_matter_type_codes' added to database #>   18 lines (incl. header) of 'organic_matter_type_codes' added to database #>  Done #>  #> Adding 'organism_source_codes' table (34/50) to database: #>  #>    0 lines (incl. header) of 'organism_source_codes' added to database #>   13 lines (incl. header) of 'organism_source_codes' added to database #>  Done #>  #> Adding 'radio_label_codes' table (35/50) to database: #>  #>    0 lines (incl. header) of 'radio_label_codes' added to database #>   91 lines (incl. header) of 'radio_label_codes' added to database #>  Done #>  #> Adding 'references' table (36/50) to database: #>  #>    0 lines (incl. header) of 'references' added to database #>   21 lines (incl. header) of 'references' added to database #>  Done #>  #> Adding 'response_site_codes' table (37/50) to database: #>  #>    0 lines (incl. header) of 'response_site_codes' added to database #>   609 lines (incl. header) of 'response_site_codes' added to database #>  Done #>  #> Adding 'results' table (38/50) to database: #>  #>    0 lines (incl. header) of 'results' added to database #>   21 lines (incl. header) of 'results' added to database #>  Done #>  #> Adding 'sample_size_unit_codes' table (39/50) to database: #>  #>    0 lines (incl. header) of 'sample_size_unit_codes' added to database #>   138 lines (incl. header) of 'sample_size_unit_codes' added to database #>  Done #>  #> Adding 'season_codes' table (40/50) to database: #>  #>    0 lines (incl. header) of 'season_codes' added to database #>   8 lines (incl. header) of 'season_codes' added to database #>  Done #>  #> Adding 'species' table (41/50) to database: #>  #>    0 lines (incl. header) of 'species' added to database #>   19 lines (incl. header) of 'species' added to database #>  Done #>  #> Adding 'species_synonyms' table (42/50) to database: #>  #>    0 lines (incl. header) of 'species_synonyms' added to database #>   18 lines (incl. header) of 'species_synonyms' added to database #>  Done #>  #> Adding 'statistical_significance_codes' table (43/50) to database: #>  #>    0 lines (incl. header) of 'statistical_significance_codes' added to database #>   9 lines (incl. header) of 'statistical_significance_codes' added to database #>  Done #>  #> Adding 'substrate_codes' table (44/50) to database: #>  #>    0 lines (incl. header) of 'substrate_codes' added to database #>   12 lines (incl. header) of 'substrate_codes' added to database #>  Done #>  #> Adding 'test_location_codes' table (45/50) to database: #>  #>    0 lines (incl. header) of 'test_location_codes' added to database #>   7 lines (incl. header) of 'test_location_codes' added to database #>  Done #>  #> Adding 'test_method_codes' table (46/50) to database: #>  #>    0 lines (incl. header) of 'test_method_codes' added to database #>   56 lines (incl. header) of 'test_method_codes' added to database #>  Done #>  #> Adding 'test_type_codes' table (47/50) to database: #>  #>    0 lines (incl. header) of 'test_type_codes' added to database #>   14 lines (incl. header) of 'test_type_codes' added to database #>  Done #>  #> Adding 'tests' table (48/50) to database: #>  #>    0 lines (incl. header) of 'tests' added to database #>   21 lines (incl. header) of 'tests' added to database #>  Done #>  #> Adding 'trend_codes' table (49/50) to database: #>  #>    0 lines (incl. header) of 'trend_codes' added to database #>   8 lines (incl. header) of 'trend_codes' added to database #>  Done #>  #> Adding 'weight_unit_codes' table (50/50) to database: #>  #>    0 lines (incl. header) of 'weight_unit_codes' added to database #>   9 lines (incl. header) of 'weight_unit_codes' added to database #>  Done #>"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cas.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for handling chemical abstract service (CAS) registry numbers — cas","title":"Functions for handling chemical abstract service (CAS) registry numbers — cas","text":"Functions handling chemical abstract service (CAS) registry numbers","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for handling chemical abstract service (CAS) registry numbers — cas","text":"","code":"cas(length = 0L)  is.cas(x)  as.cas(x)  # S3 method for class 'cas' x[[i]]  # S3 method for class 'cas' x[i]  # S3 method for class 'cas' x[[i]] <- value  # S3 method for class 'cas' x[i] <- value  # S3 method for class 'cas' format(x, hyphenate = TRUE, ...)  # S3 method for class 'cas' as.character(x, ...)  show.cas(x, ...)  # S3 method for class 'cas' print(x, ...)  # S3 method for class 'cas' as.list(x, ...)  # S3 method for class 'cas' as.double(x, ...)  # S3 method for class 'cas' as.integer(x, ...)  # S3 method for class 'cas' c(...)  # S3 method for class 'cas' as.data.frame(...)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for handling chemical abstract service (CAS) registry numbers — cas","text":"length non-negative integer specifying desired length. Double values coerced integer: supplying argument length one error. x Object data needs extracted replaced, needs coerced specific format. nearly functions documented , needs object S3 class 'cas', can created .cas. .cas, x can character (CAS registry number without hyphenation) numeric value. Note .cas accept correctly formatted valid CAS registry numbers. Index specifying element(s) extract replace. See also base::Extract(). value replacement value, can anything can converted S3 cas-class object .cas. hyphenate logical value indicating whether formatted CAS number needs hyphenated. Default TRUE. ... Arguments passed functions","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for handling chemical abstract service (CAS) registry numbers — cas","text":"Functions cas, c .cas return S3 class 'cas' objects. Coercion functions (starting '') return object specified respective function names (.e., integer, double, character, list data.frame). show.cas print functions also return formatted charaters. function .cas return single logical value, indicating whether x valid S3 cas-class object. square brackets return selected index/indices, vector cas objects selected elements replaced value.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for handling chemical abstract service (CAS) registry numbers — cas","text":"database CAS registry numbers stored text (type character). CAS numbers can consist maximum 10 digits (plus two hyphens) means CAS number can consume 12 bytes memory disk space. storing data numerically, 5 bytes required. functions provide means handle CAS registry numbers coerce different formats types.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cas.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Functions for handling chemical abstract service (CAS) registry numbers — cas","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for handling chemical abstract service (CAS) registry numbers — cas","text":"","code":"## This will generate a vector of cas objects containing 10 ## fictive (0-00-0), but valid registry numbers: cas(10) #>  [1] \"0-00-0\" \"0-00-0\" \"0-00-0\" \"0-00-0\" \"0-00-0\" \"0-00-0\" \"0-00-0\" \"0-00-0\" #>  [9] \"0-00-0\" \"0-00-0\"  ## This is a cas-object: is.cas(cas(0L)) #> [1] TRUE  ## This is not a cas-object: is.cas(0L) #> [1] FALSE  ## Three different ways of creating a cas object from ## Benzene's CAS registry number (the result is the same) as.cas(\"71-43-2\") #> [1] \"71-43-2\" as.cas(\"71432\") #> [1] \"71-43-2\" as.cas(71432L) #> [1] \"71-43-2\"  ## This is one way of creating a vector with multiple CAS registry numbers: cas_data <- as.cas(c(\"64175\", \"71432\", \"58082\"))  ## This is how you select a specific element(s) from the vector: cas_data[2:3] #> [1] \"71-43-2\" \"58-08-2\" cas_data[[2]] #> [1] \"71-43-2\"  ## You can also replace specific elements in the vector: cas_data[1] <- \"7440-23-5\" cas_data[[2]] <- \"129-00-0\"  ## You can format CAS numbers with or without hyphens: format(cas_data, TRUE) #> [1] \"7440-23-5\" \"129-00-0\"  \"58-08-2\"   format(cas_data, FALSE) #> [1] \"7440235\" \"129000\"  \"58082\"    ## The same can be achieved using as.character as.character(cas_data, TRUE) #> [1] \"7440-23-5\" \"129-00-0\"  \"58-08-2\"   as.character(cas_data, FALSE) #> [1] \"7440235\" \"129000\"  \"58082\"    ## There are also show and print methods available: show(cas_data) #> [1] \"7440-23-5\" \"129-00-0\"  \"58-08-2\"   print(cas_data) #> [1] \"7440-23-5\" \"129-00-0\"  \"58-08-2\"    ## Numeric values can be obtained from CAS using as.numeric, as.double or as.integer as.numeric(cas_data) #> [1] 7440235  129000   58082  ## Be careful, however. Some CAS numbers cannot be represented by R's 32 bit integers ## and will produce NA's. This will work OK: huge_cas <- as.cas(\"9999999-99-5\")  if (FALSE) { # \\dontrun{ ## This will not: as.integer(huge_cas) } # }  ## The trick applied by this package is that the final ## validation digit is stored separately as attribute: unclass(huge_cas) #> [1] 999999999 #> attr(,\"checksum\") #> [1] 05  ## This is how cas objects can be concatenated: cas_data <- c(huge_cas, cas_data)  ## This will create a data.frame as.data.frame(cas_data) #>          <cas> #> 1 9999999-99-5 #> 2    7440-23-5 #> 3     129-00-0 #> 4      58-08-2  ## This will create a list: as.list(cas_data) #> [[1]] #> [1] \"9999999-99-5\" #>  #> [[2]] #> [1] \"7440-23-5\" #>  #> [[3]] #> [1] \"129-00-0\" #>  #> [[4]] #> [1] \"58-08-2\" #>"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_availability.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether a ECOTOX database exists locally — check_ecotox_availability","title":"Check whether a ECOTOX database exists locally — check_ecotox_availability","text":"Tests whether local copy US EPA ECOTOX database exists get_ecotox_path().","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_availability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether a ECOTOX database exists locally — check_ecotox_availability","text":"","code":"check_ecotox_availability(target = get_ecotox_path())"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_availability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether a ECOTOX database exists locally — check_ecotox_availability","text":"target character string specifying path look database file.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_availability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether a ECOTOX database exists locally — check_ecotox_availability","text":"Returns logical value indicating whether copy database exists. also returns files attribute lists copies database found.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_availability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check whether a ECOTOX database exists locally — check_ecotox_availability","text":"arguments omitted, function look default directory (get_ecotox_path()). However, possible build database file elsewhere necessary.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_availability.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check whether a ECOTOX database exists locally — check_ecotox_availability","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_availability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether a ECOTOX database exists locally — check_ecotox_availability","text":"","code":"check_ecotox_availability() #> [1] FALSE #> attr(,\"files\") #> [1] path     database date     #> <0 rows> (or 0-length row.names)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_build.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the locally build database for validity — check_ecotox_build","title":"Check the locally build database for validity — check_ecotox_build","text":"Performs simple tests check whether locally built database corrupted.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_build.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the locally build database for validity — check_ecotox_build","text":"","code":"check_ecotox_build(path = get_ecotox_path(), version, ...)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_build.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the locally build database for validity — check_ecotox_build","text":"path character string path location local database (default get_ecotox_path()). version character string referring release version database wish locate. format date EPA download link, month, day, year, separated underscores (\"%m_%d_%Y\"). missing, recent available copy selected automatically. ... Arguments passed dbConnect() method dbDisconnect() method.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_build.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the locally build database for validity — check_ecotox_build","text":"Returns indicative logical value whether database corrupted. TRUE indicates database likely OK. FALSE indicates something might wrong. Additional messages (FALSE) included attributes containing hints outcoming tests. See also 'details' section.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_build.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the locally build database for validity — check_ecotox_build","text":"now function tests expected tables present locally built database. Note later release database tables added. Therefore older builds function might return FALSE whereas actually just fine (just -dated). Furthermore, function tests tables contain one records. Obviously, guarantee database valid, start. tests may added future releases.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_build.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check the locally build database for validity — check_ecotox_build","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_build.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the locally build database for validity — check_ecotox_build","text":"","code":"if (check_ecotox_availability()) {   check_ecotox_build() }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the locally build database is up to date — check_ecotox_version","title":"Check if the locally build database is up to date — check_ecotox_version","text":"Checks version database available online EPA specified version (latest default) database build locally. Returns TRUE .","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the locally build database is up to date — check_ecotox_version","text":"","code":"check_ecotox_version(path = get_ecotox_path(), version, verbose = TRUE, ...)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the locally build database is up to date — check_ecotox_version","text":"path copy database somewhere default directory (get_ecotox_path()), can provide path . version character string referring release version database wish locate. format date EPA download link, month, day, year, separated underscores (\"%m_%d_%Y\"). missing, recent available copy selected automatically. verbose logical value. true messages shown console reporting check. ... Arguments passed get_ecotox_url()","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the locally build database is up to date — check_ecotox_version","text":"Returns logical value invisibly indicating whether locally build date latest release EPA.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_version.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if the locally build database is up to date — check_ecotox_version","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/check_ecotox_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if the locally build database is up to date — check_ecotox_version","text":"","code":"if (check_ecotox_availability()) {   check_ecotox_version() }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cite_ecotox.html","id":null,"dir":"Reference","previous_headings":"","what":"Cite the downloaded copy of the ECOTOX database — cite_ecotox","title":"Cite the downloaded copy of the ECOTOX database — cite_ecotox","text":"Cite downloaded copy ECOTOX database package (citation(\"ECOTOXr\")) reproducible results.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cite_ecotox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cite the downloaded copy of the ECOTOX database — cite_ecotox","text":"","code":"cite_ecotox(path = get_ecotox_path(), version)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cite_ecotox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cite the downloaded copy of the ECOTOX database — cite_ecotox","text":"path character string path location local database (default get_ecotox_path()). version character string referring release version database wish locate. format date EPA download link, month, day, year, separated underscores (\"%m_%d_%Y\"). missing, recent available copy selected automatically.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cite_ecotox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cite the downloaded copy of the ECOTOX database — cite_ecotox","text":"Returns vector bibentry()'s, containing reference downloaded database package.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cite_ecotox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cite the downloaded copy of the ECOTOX database — cite_ecotox","text":"download copy EPA ECOTOX database using download_ecotox_data(), BibTex file stored registers database release version access (= download) date. Use function obtain citation specific download. order others reproduce results, key cite data source accurately possible.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cite_ecotox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cite the downloaded copy of the ECOTOX database — cite_ecotox","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/cite_ecotox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cite the downloaded copy of the ECOTOX database — cite_ecotox","text":"","code":"## In order to cite downloaded database and this package: cite_ecotox() |> suppressWarnings() #> [[1]] #> [[1]]$title #> [1] \"ECOTOXr: An R package for reproducible and transparent retrieval of data from EPA's ECOTOX database\" #>  #> [[1]]$author #> [1] \"P. de Vries\" #>  #> [[1]]$journal #> [1] \"Chemosphere\" #>  #> [[1]]$year #> [1] \"2024\" #>  #> [[1]]$volume #> [1] \"364\" #>  #> [[1]]$pages #> [1] \"143078\" #>  #> [[1]]$doi #> [1] \"10.1016/j.chemosphere.2024.143078\" #>  #> [[1]]$note #> [1] \"R package version 1.2.0.0003\" #>  #> attr(,\"bibtype\") #> [1] \"Article\" #>"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/dbConnectEcotox.html","id":null,"dir":"Reference","previous_headings":"","what":"Open or close a connection to the local ECOTOX database — dbConnectEcotox","title":"Open or close a connection to the local ECOTOX database — dbConnectEcotox","text":"Wrappers dbConnect() dbDisconnect() methods.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/dbConnectEcotox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open or close a connection to the local ECOTOX database — dbConnectEcotox","text":"","code":"dbConnectEcotox(path = get_ecotox_path(), version, ...)  dbDisconnectEcotox(conn, ...)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/dbConnectEcotox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open or close a connection to the local ECOTOX database — dbConnectEcotox","text":"path character string path location local database (default get_ecotox_path()). version character string referring release version database wish locate. format date EPA download link, month, day, year, separated underscores (\"%m_%d_%Y\"). missing, recent available copy selected automatically. ... Arguments passed dbConnect() method dbDisconnect() method. conn open connection ECOTOX database needs closed.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/dbConnectEcotox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open or close a connection to the local ECOTOX database — dbConnectEcotox","text":"database connection form DBI::DBIConnection-class() object. object tagged : time stamp; package version used; file path SQLite database used connection. tags added attributes object.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/dbConnectEcotox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Open or close a connection to the local ECOTOX database — dbConnectEcotox","text":"Open close connection local ECOTOX database. functions required want send custom queries database. searches search_ecotox() function adequate.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/dbConnectEcotox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Open or close a connection to the local ECOTOX database — dbConnectEcotox","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/dbConnectEcotox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open or close a connection to the local ECOTOX database — dbConnectEcotox","text":"","code":"## This will only work when a copy of the database exists: if (check_ecotox_availability()) {   con <- dbConnectEcotox()    ## check if the connection works by listing the tables in the database:   dbListTables(con)    ## Let's be a good boy/girl and close the connection to the database when we're done:   dbDisconnectEcotox(con) }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/download_ecotox_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and extract ECOTOX database files and compose database — download_ecotox_data","title":"Download and extract ECOTOX database files and compose database — download_ecotox_data","text":"order package fully function, local copy ECOTOX database needs build. function download required data build database.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/download_ecotox_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and extract ECOTOX database files and compose database — download_ecotox_data","text":"","code":"download_ecotox_data(   target = get_ecotox_path(),   write_log = TRUE,   ask = TRUE,   verify_ssl = getOption(\"ECOTOXr_verify_ssl\"),   ... )"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/download_ecotox_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and extract ECOTOX database files and compose database — download_ecotox_data","text":"target Target directory files downloaded database compiled. Default get_ecotox_path(). write_log logical value indicating whether log file written target path TRUE. ask several steps files (potentially) overwritten deleted. cases user asked command line cases. Set parameter FALSE order continue without warning asking. verify_ssl set FALSE SSL certificate host (EPA) verified. Can also set option: options(ECOTOXr_verify_ssl = TRUE). Default TRUE. ... Arguments passed httr2::req_options().","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/download_ecotox_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and extract ECOTOX database files and compose database — download_ecotox_data","text":"Returns NULL invisibly.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/download_ecotox_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and extract ECOTOX database files and compose database — download_ecotox_data","text":"function attempt find latest download url ECOTOX database EPA website (see get_ecotox_url()). found attempt download zipped archive containing required data. data extracted local copy database build. Use 'suppressMessages()' suppress progress report.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/download_ecotox_data.html","id":"known-issues","dir":"Reference","previous_headings":"","what":"Known issues","title":"Download and extract ECOTOX database files and compose database — download_ecotox_data","text":"machines function fails connect database download URL EPA website due missing SSL certificates. Unfortunately, easy fix package. work around download unzip file manually using different machine browser less strict SSL certificates. can call build_ecotox_sqlite() point source location manually extracted zip archive. purpose get_ecotox_url() can used. Alternatively, one try call download_ecotox_data() setting verify_ssl = FALSE; trust download URL get_ecotox_URL().","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/download_ecotox_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download and extract ECOTOX database files and compose database — download_ecotox_data","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/download_ecotox_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and extract ECOTOX database files and compose database — download_ecotox_data","text":"","code":"if (FALSE) { # \\dontrun{ ## This will download and build the database in your temp dir: if (interactive()) {   download_ecotox_data(tempdir()) } } # }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information on the local ECOTOX database when available — get_ecotox_info","title":"Get information on the local ECOTOX database when available — get_ecotox_info","text":"Get information local ECOTOX database build.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information on the local ECOTOX database when available — get_ecotox_info","text":"","code":"get_ecotox_info(path = get_ecotox_path(), version)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information on the local ECOTOX database when available — get_ecotox_info","text":"path character string path location local database (default get_ecotox_path()). version character string referring release version database wish locate. format date EPA download link, month, day, year, separated underscores (\"%m_%d_%Y\"). missing, recent available copy selected automatically.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information on the local ECOTOX database when available — get_ecotox_info","text":"Returns vector characters, containing information selected local ECOTOX database.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get information on the local ECOTOX database when available — get_ecotox_info","text":"Get information local ECOTOX database build. information retrieved log-file (optionally) stored local database calling download_ecotox_data() build_ecotox_sqlite().","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_info.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get information on the local ECOTOX database when available — get_ecotox_info","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information on the local ECOTOX database when available — get_ecotox_info","text":"","code":"if (check_ecotox_availability()) {   ## Show info on the current database (only works when one is downloaded and build):   get_ecotox_info() }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ECOTOX download URL from EPA website — get_ecotox_url","title":"Get ECOTOX download URL from EPA website — get_ecotox_url","text":"function downloads webpage https://cfpub.epa.gov/ecotox/index.cfm. searches download link complete ECOTOX database extract URL.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ECOTOX download URL from EPA website — get_ecotox_url","text":"","code":"get_ecotox_url(verify_ssl = getOption(\"ECOTOXr_verify_ssl\"), ...)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ECOTOX download URL from EPA website — get_ecotox_url","text":"verify_ssl set FALSE SSL certificate host (EPA) verified. Can also set option: options(ECOTOXr_verify_ssl = TRUE). Default TRUE. ... arguments passed httr2::req_options()","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ECOTOX download URL from EPA website — get_ecotox_url","text":"Returns character string containing download URL latest version EPA ECOTOX database.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_url.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get ECOTOX download URL from EPA website — get_ecotox_url","text":"function called download_ecotox_data() tries download file resulting URL. machines fails due issues SSL certificate. user can try download file using URL different browser (different machine). Alternatively, user try use [download_ecotox_data](verify_ssl = FALE) download URL trusted.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_url.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get ECOTOX download URL from EPA website — get_ecotox_url","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_ecotox_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ECOTOX download URL from EPA website — get_ecotox_url","text":"","code":"if (interactive()) {   get_ecotox_url() }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_path.html","id":null,"dir":"Reference","previous_headings":"","what":"The local path to the ECOTOX database (directory or sqlite file) — get_ecotox_sqlite_file","title":"The local path to the ECOTOX database (directory or sqlite file) — get_ecotox_sqlite_file","text":"Obtain local path ECOTOX database () placed.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The local path to the ECOTOX database (directory or sqlite file) — get_ecotox_sqlite_file","text":"","code":"get_ecotox_sqlite_file(path = get_ecotox_path(), version)  get_ecotox_path()"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The local path to the ECOTOX database (directory or sqlite file) — get_ecotox_sqlite_file","text":"path copy database somewhere default directory (get_ecotox_path()), can provide path . version character string referring release version database wish locate. format date EPA download link, month, day, year, separated underscores (\"%m_%d_%Y\"). missing, recent available copy selected automatically.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The local path to the ECOTOX database (directory or sqlite file) — get_ecotox_sqlite_file","text":"Returns character string path. get_ecotox_path return default directory database. get_ecotox_sqlite_file return path sqlite file exists.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The local path to the ECOTOX database (directory or sqlite file) — get_ecotox_sqlite_file","text":"can useful know database located disk. function returns location provided rappdirs::app_dir(), specified using options(ECOTOXr_path = \"mypath\").","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_path.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The local path to the ECOTOX database (directory or sqlite file) — get_ecotox_sqlite_file","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/get_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The local path to the ECOTOX database (directory or sqlite file) — get_ecotox_sqlite_file","text":"","code":"get_ecotox_path() #> [1] \"~/.cache/ECOTOXr\"  if (check_ecotox_availability()) {   ## This will only work if a local database exists:   get_ecotox_sqlite_file() }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/list_ecotox_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"List the field names that are available from the ECOTOX database — list_ecotox_fields","title":"List the field names that are available from the ECOTOX database — list_ecotox_fields","text":"List field names (table headers) available ECOTOX database","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/list_ecotox_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the field names that are available from the ECOTOX database — list_ecotox_fields","text":"","code":"list_ecotox_fields(   which = c(\"default\", \"extended\", \"full\", \"all\"),   include_table = TRUE )"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/list_ecotox_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the field names that are available from the ECOTOX database — list_ecotox_fields","text":"character string specifies fields return. Can : 'default': returns default output field names; '': returns fields; 'extended': returns fields default tables; 'full': returns fields except tables 'chemical_carriers', 'media_characteristics', 'doses', 'dose_responses', 'dose_response_details', 'dose_response_links' 'dose_stat_method_codes'. include_table logical value indicating whether table name included prefix. Default TRUE.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/list_ecotox_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the field names that are available from the ECOTOX database — list_ecotox_fields","text":"Returns vector type character containing field names ECOTOX database.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/list_ecotox_fields.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List the field names that are available from the ECOTOX database — list_ecotox_fields","text":"can useful specifying search_ecotox(), identify fields available database, searching output. requesting '' fields, get fields available latest EPA release ECOTOX database. means necessarily fields available local build database.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/list_ecotox_fields.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"List the field names that are available from the ECOTOX database — list_ecotox_fields","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/list_ecotox_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the field names that are available from the ECOTOX database — list_ecotox_fields","text":"","code":"## Fields that are included in search results by default: list_ecotox_fields(\"default\") #>  [1] \"tests.test_cas\"                        #>  [2] \"tests.test_grade\"                      #>  [3] \"tests.test_grade_comments\"             #>  [4] \"tests.test_purity_mean_op\"             #>  [5] \"tests.test_purity_mean\"                #>  [6] \"tests.test_purity_min_op\"              #>  [7] \"tests.test_purity_min\"                 #>  [8] \"tests.test_purity_max_op\"              #>  [9] \"tests.test_purity_max\"                 #> [10] \"tests.test_purity_comments\"            #> [11] \"tests.organism_lifestage\"              #> [12] \"tests.organism_age_mean_op\"            #> [13] \"tests.organism_age_mean\"               #> [14] \"tests.organism_age_min_op\"             #> [15] \"tests.organism_age_min\"                #> [16] \"tests.organism_age_max_op\"             #> [17] \"tests.organism_age_max\"                #> [18] \"tests.exposure_duration_mean_op\"       #> [19] \"tests.exposure_duration_mean\"          #> [20] \"tests.exposure_duration_min_op\"        #> [21] \"tests.exposure_duration_min\"           #> [22] \"tests.exposure_duration_max_op\"        #> [23] \"tests.exposure_duration_max\"           #> [24] \"tests.test_location\"                   #> [25] \"tests.exposure_type\"                   #> [26] \"tests.media_type\"                      #> [27] \"tests.num_doses_mean_op\"               #> [28] \"tests.num_doses_mean\"                  #> [29] \"tests.num_doses_min_op\"                #> [30] \"tests.num_doses_min\"                   #> [31] \"tests.num_doses_max_op\"                #> [32] \"tests.num_doses_max\"                   #> [33] \"dose_responses.response_site\"          #> [34] \"references.reference_type\"             #> [35] \"references.author\"                     #> [36] \"references.title\"                      #> [37] \"references.source\"                     #> [38] \"references.publication_year\"           #> [39] \"references.doi\"                        #> [40] \"results.endpoint\"                      #> [41] \"results.effect\"                        #> [42] \"results.measurement\"                   #> [43] \"results.conc1_mean_op\"                 #> [44] \"results.conc1_mean\"                    #> [45] \"results.conc1_min_op\"                  #> [46] \"results.conc1_min\"                     #> [47] \"results.conc1_max_op\"                  #> [48] \"results.conc1_max\"                     #> [49] \"results.conc1_unit\"                    #> [50] \"results.conc1_comments\"                #> [51] \"results.conc2_type\"                    #> [52] \"results.conc2_mean_op\"                 #> [53] \"results.conc2_mean\"                    #> [54] \"results.conc2_min_op\"                  #> [55] \"results.conc2_min\"                     #> [56] \"results.conc2_max_op\"                  #> [57] \"results.conc2_max\"                     #> [58] \"results.conc2_unit\"                    #> [59] \"results.conc2_comments\"                #> [60] \"results.conc3_type\"                    #> [61] \"results.conc3_mean_op\"                 #> [62] \"results.conc3_mean\"                    #> [63] \"results.conc3_min_op\"                  #> [64] \"results.conc3_min\"                     #> [65] \"results.conc3_max_op\"                  #> [66] \"results.conc3_max\"                     #> [67] \"results.conc3_unit\"                    #> [68] \"results.conc3_comments\"                #> [69] \"results.bcf1_mean_op\"                  #> [70] \"results.bcf1_mean\"                     #> [71] \"results.bcf1_min_op\"                   #> [72] \"results.bcf1_min\"                      #> [73] \"results.bcf1_max_op\"                   #> [74] \"results.bcf1_max\"                      #> [75] \"results.bcf1_unit\"                     #> [76] \"results.bcf1_comments\"                 #> [77] \"results.bcf2_mean_op\"                  #> [78] \"results.bcf2_mean\"                     #> [79] \"results.bcf2_min_op\"                   #> [80] \"results.bcf2_min\"                      #> [81] \"results.bcf2_max_op\"                   #> [82] \"results.bcf2_max\"                      #> [83] \"results.bcf2_unit\"                     #> [84] \"results.bcf2_comments\"                 #> [85] \"results.bcf3_mean_op\"                  #> [86] \"results.bcf3_mean\"                     #> [87] \"results.bcf3_min_op\"                   #> [88] \"results.bcf3_min\"                      #> [89] \"results.bcf3_max_op\"                   #> [90] \"results.bcf3_max\"                      #> [91] \"results.bcf3_unit\"                     #> [92] \"results.chem_analysis_method\"          #> [93] \"results.chem_analysis_method_comments\" #> [94] \"species.species_number\"                #> [95] \"species.common_name\"                   #> [96] \"species.latin_name\"                    #> [97] \"species.ecotox_group\"                  #> [98] \"chemicals.cas_number\"                  #> [99] \"chemicals.chemical_name\"                ## All fields that are available from the ECOTOX database: list_ecotox_fields(\"all\") #>   [1] \"chemical_carriers.carrier_id\"                        #>   [2] \"chemical_carriers.test_id\"                           #>   [3] \"chemical_carriers.cas_number\"                        #>   [4] \"chemical_carriers.chem_name\"                         #>   [5] \"chemical_carriers.purpose\"                           #>   [6] \"chemical_carriers.grade\"                             #>   [7] \"chemical_carriers.grade_comments\"                    #>   [8] \"chemical_carriers.formulation\"                       #>   [9] \"chemical_carriers.formulation_comments\"              #>  [10] \"chemical_carriers.radiolabel\"                        #>  [11] \"chemical_carriers.radiolabel_comments\"               #>  [12] \"chemical_carriers.purity_mean_op\"                    #>  [13] \"chemical_carriers.purity_mean\"                       #>  [14] \"chemical_carriers.purity_min_op\"                     #>  [15] \"chemical_carriers.purity_min\"                        #>  [16] \"chemical_carriers.purity_max_op\"                     #>  [17] \"chemical_carriers.purity_max\"                        #>  [18] \"chemical_carriers.purity_comments\"                   #>  [19] \"chemical_carriers.characteristics\"                   #>  [20] \"tests.test_id\"                                       #>  [21] \"tests.reference_number\"                              #>  [22] \"tests.test_cas\"                                      #>  [23] \"tests.test_grade\"                                    #>  [24] \"tests.test_grade_comments\"                           #>  [25] \"tests.test_formulation\"                              #>  [26] \"tests.test_formulation_comments\"                     #>  [27] \"tests.test_radiolabel\"                               #>  [28] \"tests.test_radiolabel_comments\"                      #>  [29] \"tests.test_purity_mean_op\"                           #>  [30] \"tests.test_purity_mean\"                              #>  [31] \"tests.test_purity_min_op\"                            #>  [32] \"tests.test_purity_min\"                               #>  [33] \"tests.test_purity_max_op\"                            #>  [34] \"tests.test_purity_max\"                               #>  [35] \"tests.test_purity_comments\"                          #>  [36] \"tests.test_characteristics\"                          #>  [37] \"tests.species_number\"                                #>  [38] \"tests.organism_habitat\"                              #>  [39] \"tests.organism_source\"                               #>  [40] \"tests.organism_source_comments\"                      #>  [41] \"tests.organism_lifestage\"                            #>  [42] \"tests.organism_lifestage_comments\"                   #>  [43] \"tests.organism_age_mean_op\"                          #>  [44] \"tests.organism_age_mean\"                             #>  [45] \"tests.organism_age_min_op\"                           #>  [46] \"tests.organism_age_min\"                              #>  [47] \"tests.organism_age_max_op\"                           #>  [48] \"tests.organism_age_max\"                              #>  [49] \"tests.organism_age_unit\"                             #>  [50] \"tests.organism_init_wt_mean_op\"                      #>  [51] \"tests.organism_init_wt_mean\"                         #>  [52] \"tests.organism_init_wt_min_op\"                       #>  [53] \"tests.organism_init_wt_min\"                          #>  [54] \"tests.organism_init_wt_max_op\"                       #>  [55] \"tests.organism_init_wt_max\"                          #>  [56] \"tests.organism_init_wt_unit\"                         #>  [57] \"tests.organism_characteristics\"                      #>  [58] \"tests.organism_gender\"                               #>  [59] \"tests.organism_length_mean_op\"                       #>  [60] \"tests.organism_length_mean\"                          #>  [61] \"tests.organism_length_min_op\"                        #>  [62] \"tests.organism_length_min\"                           #>  [63] \"tests.organism_length_max_op\"                        #>  [64] \"tests.organism_length_max\"                           #>  [65] \"tests.organism_length_unit\"                          #>  [66] \"tests.organism_length_type\"                          #>  [67] \"tests.organism_strain\"                               #>  [68] \"tests.experimental_design\"                           #>  [69] \"tests.study_duration_mean_op\"                        #>  [70] \"tests.study_duration_mean\"                           #>  [71] \"tests.study_duration_min_op\"                         #>  [72] \"tests.study_duration_min\"                            #>  [73] \"tests.study_duration_max_op\"                         #>  [74] \"tests.study_duration_max\"                            #>  [75] \"tests.study_duration_unit\"                           #>  [76] \"tests.study_duration_comments\"                       #>  [77] \"tests.exposure_duration_mean_op\"                     #>  [78] \"tests.exposure_duration_mean\"                        #>  [79] \"tests.exposure_duration_min_op\"                      #>  [80] \"tests.exposure_duration_min\"                         #>  [81] \"tests.exposure_duration_max_op\"                      #>  [82] \"tests.exposure_duration_max\"                         #>  [83] \"tests.exposure_duration_unit\"                        #>  [84] \"tests.exposure_duration_comments\"                    #>  [85] \"tests.study_type\"                                    #>  [86] \"tests.study_type_comments\"                           #>  [87] \"tests.test_type\"                                     #>  [88] \"tests.test_type_comments\"                            #>  [89] \"tests.test_location\"                                 #>  [90] \"tests.test_location_comments\"                        #>  [91] \"tests.test_method\"                                   #>  [92] \"tests.test_method_comments\"                          #>  [93] \"tests.exposure_type\"                                 #>  [94] \"tests.exposure_type_comments\"                        #>  [95] \"tests.control_type\"                                  #>  [96] \"tests.control_type_comments\"                         #>  [97] \"tests.media_type\"                                    #>  [98] \"tests.media_type_comments\"                           #>  [99] \"tests.num_doses_mean_op\"                             #> [100] \"tests.num_doses_mean\"                                #> [101] \"tests.num_doses_min_op\"                              #> [102] \"tests.num_doses_min\"                                 #> [103] \"tests.num_doses_max_op\"                              #> [104] \"tests.num_doses_max\"                                 #> [105] \"tests.num_doses_comments\"                            #> [106] \"tests.other_effect_comments\"                         #> [107] \"tests.application_freq_mean_op\"                      #> [108] \"tests.application_freq_mean\"                         #> [109] \"tests.application_freq_min_op\"                       #> [110] \"tests.application_freq_min\"                          #> [111] \"tests.application_freq_max_op\"                       #> [112] \"tests.application_freq_max\"                          #> [113] \"tests.application_freq_unit\"                         #> [114] \"tests.application_freq_comments\"                     #> [115] \"tests.application_type\"                              #> [116] \"tests.application_type_comments\"                     #> [117] \"tests.application_rate\"                              #> [118] \"tests.application_rate_unit\"                         #> [119] \"tests.application_date\"                              #> [120] \"tests.application_date_comments\"                     #> [121] \"tests.application_season\"                            #> [122] \"tests.application_season_comments\"                   #> [123] \"tests.subhabitat\"                                    #> [124] \"tests.subhabitat_description\"                        #> [125] \"tests.substrate\"                                     #> [126] \"tests.substrate_description\"                         #> [127] \"tests.water_depth_mean_op\"                           #> [128] \"tests.water_depth_mean\"                              #> [129] \"tests.water_depth_min_op\"                            #> [130] \"tests.water_depth_min\"                               #> [131] \"tests.water_depth_max_op\"                            #> [132] \"tests.water_depth_max\"                               #> [133] \"tests.water_depth_unit\"                              #> [134] \"tests.water_depth_comments\"                          #> [135] \"tests.geographic_code\"                               #> [136] \"tests.geographic_location\"                           #> [137] \"tests.latitude\"                                      #> [138] \"tests.longitude\"                                     #> [139] \"tests.halflife_mean_op\"                              #> [140] \"tests.halflife_mean\"                                 #> [141] \"tests.halflife_min_op\"                               #> [142] \"tests.halflife_min\"                                  #> [143] \"tests.halflife_max_op\"                               #> [144] \"tests.halflife_max\"                                  #> [145] \"tests.halflife_unit\"                                 #> [146] \"tests.halflife_comments\"                             #> [147] \"tests.additional_comments\"                           #> [148] \"tests.created_date\"                                  #> [149] \"tests.modified_date\"                                 #> [150] \"tests.published_date\"                                #> [151] \"dose_response_details.dose_resp_detail_id\"           #> [152] \"dose_response_details.dose_resp_id\"                  #> [153] \"dose_response_details.dose_id\"                       #> [154] \"dose_response_details.response_mean_op\"              #> [155] \"dose_response_details.response_mean\"                 #> [156] \"dose_response_details.response_min_op\"               #> [157] \"dose_response_details.response_min\"                  #> [158] \"dose_response_details.response_max_op\"               #> [159] \"dose_response_details.response_max\"                  #> [160] \"dose_response_details.statistical_method\"            #> [161] \"dose_response_details.statistical_method_comments\"   #> [162] \"dose_response_details.response_stat_value\"           #> [163] \"dose_response_details.response_stat_value_comments\"  #> [164] \"dose_response_details.sample_size_mean_op\"           #> [165] \"dose_response_details.sample_size_mean\"              #> [166] \"dose_response_details.sample_size_min_op\"            #> [167] \"dose_response_details.sample_size_min\"               #> [168] \"dose_response_details.sample_size_max_op\"            #> [169] \"dose_response_details.sample_size_max\"               #> [170] \"dose_response_details.significance_code\"             #> [171] \"dose_response_details.significance_type\"             #> [172] \"dose_response_details.significance_level_mean_op\"    #> [173] \"dose_response_details.significance_level_mean\"       #> [174] \"dose_response_details.significance_level_min_op\"     #> [175] \"dose_response_details.significance_level_min\"        #> [176] \"dose_response_details.significance_level_max_op\"     #> [177] \"dose_response_details.significance_level_max\"        #> [178] \"dose_response_details.significance_comments\"         #> [179] \"dose_response_details.chem_analysis_method\"          #> [180] \"dose_response_details.chem_analysis_method_comments\" #> [181] \"dose_response_details.dry_wet\"                       #> [182] \"dose_response_details.dry_wet_pct_mean_op\"           #> [183] \"dose_response_details.dry_wet_pct_mean\"              #> [184] \"dose_response_details.dry_wet_pct_min_op\"            #> [185] \"dose_response_details.dry_wet_pct_min\"               #> [186] \"dose_response_details.dry_wet_pct_max_op\"            #> [187] \"dose_response_details.dry_wet_pct_max\"               #> [188] \"dose_response_details.dry_wet_pct_comments\"          #> [189] \"dose_response_details.lipid_pct_mean_op\"             #> [190] \"dose_response_details.lipid_pct_mean\"                #> [191] \"dose_response_details.lipid_pct_min_op\"              #> [192] \"dose_response_details.lipid_pct_min\"                 #> [193] \"dose_response_details.lipid_pct_max_op\"              #> [194] \"dose_response_details.lipid_pct_max\"                 #> [195] \"dose_response_details.lipid_pct_comments\"            #> [196] \"dose_response_details.dose_resp_detail_comment\"      #> [197] \"dose_response_links.dose_resp_link_id\"               #> [198] \"dose_response_links.result_id\"                       #> [199] \"dose_response_links.dose_resp_id\"                    #> [200] \"dose_responses.dose_resp_id\"                         #> [201] \"dose_responses.test_id\"                              #> [202] \"dose_responses.sample_size_unit\"                     #> [203] \"dose_responses.sample_size_comments\"                 #> [204] \"dose_responses.effect_code\"                          #> [205] \"dose_responses.measurement_code\"                     #> [206] \"dose_responses.measurement_comments\"                 #> [207] \"dose_responses.response_site\"                        #> [208] \"dose_responses.response_site_comments\"               #> [209] \"dose_responses.obs_duration_mean_op\"                 #> [210] \"dose_responses.obs_duration_mean\"                    #> [211] \"dose_responses.obs_duration_min_op\"                  #> [212] \"dose_responses.obs_duration_min\"                     #> [213] \"dose_responses.obs_duration_max_op\"                  #> [214] \"dose_responses.obs_duration_max\"                     #> [215] \"dose_responses.obs_duration_unit\"                    #> [216] \"dose_responses.obs_duration_comments\"                #> [217] \"dose_responses.response_unit\"                        #> [218] \"dose_responses.response_comments\"                    #> [219] \"dose_responses.additional_comments\"                  #> [220] \"doses.dose_id\"                                       #> [221] \"doses.test_id\"                                       #> [222] \"doses.dose_number\"                                   #> [223] \"doses.dose_conc_unit\"                                #> [224] \"doses.dose_comments\"                                 #> [225] \"doses.control_type\"                                  #> [226] \"doses.number_organisms_mean_op\"                      #> [227] \"doses.number_organisms_mean\"                         #> [228] \"doses.number_organisms_min_op\"                       #> [229] \"doses.number_organisms_min\"                          #> [230] \"doses.number_organisms_max_op\"                       #> [231] \"doses.number_organisms_max\"                          #> [232] \"doses.number_replicates\"                             #> [233] \"doses.dose1_conc_type\"                               #> [234] \"doses.dose1_mean_op\"                                 #> [235] \"doses.dose1_mean\"                                    #> [236] \"doses.dose1_min_op\"                                  #> [237] \"doses.dose1_min\"                                     #> [238] \"doses.dose1_max_op\"                                  #> [239] \"doses.dose1_max\"                                     #> [240] \"doses.dose1_stat_method\"                             #> [241] \"doses.dose1_stat_value\"                              #> [242] \"doses.dose2_conc_type\"                               #> [243] \"doses.dose2_mean_op\"                                 #> [244] \"doses.dose2_mean\"                                    #> [245] \"doses.dose2_min_op\"                                  #> [246] \"doses.dose2_min\"                                     #> [247] \"doses.dose2_max_op\"                                  #> [248] \"doses.dose2_max\"                                     #> [249] \"doses.dose2_stat_method\"                             #> [250] \"doses.dose2_stat_value\"                              #> [251] \"doses.dose3_conc_type\"                               #> [252] \"doses.dose3_mean_op\"                                 #> [253] \"doses.dose3_mean\"                                    #> [254] \"doses.dose3_min_op\"                                  #> [255] \"doses.dose3_min\"                                     #> [256] \"doses.dose3_max_op\"                                  #> [257] \"doses.dose3_max\"                                     #> [258] \"doses.dose3_stat_method\"                             #> [259] \"doses.dose3_stat_value\"                              #> [260] \"media_characteristics.result_id\"                     #> [261] \"media_characteristics.soil_type\"                     #> [262] \"media_characteristics.media_texture_sand_mean_op\"    #> [263] \"media_characteristics.media_texture_sand_mean\"       #> [264] \"media_characteristics.media_texture_sand_min_op\"     #> [265] \"media_characteristics.media_texture_sand_min\"        #> [266] \"media_characteristics.media_texture_sand_max_op\"     #> [267] \"media_characteristics.media_texture_sand_max\"        #> [268] \"media_characteristics.media_texture_silt_mean_op\"    #> [269] \"media_characteristics.media_texture_silt_mean\"       #> [270] \"media_characteristics.media_texture_silt_min_op\"     #> [271] \"media_characteristics.media_texture_silt_min\"        #> [272] \"media_characteristics.media_texture_silt_max_op\"     #> [273] \"media_characteristics.media_texture_silt_max\"        #> [274] \"media_characteristics.media_texture_clay_mean_op\"    #> [275] \"media_characteristics.media_texture_clay_mean\"       #> [276] \"media_characteristics.media_texture_clay_min_op\"     #> [277] \"media_characteristics.media_texture_clay_min\"        #> [278] \"media_characteristics.media_texture_clay_max_op\"     #> [279] \"media_characteristics.media_texture_clay_max\"        #> [280] \"media_characteristics.media_texture_comments\"        #> [281] \"media_characteristics.media_conc_measured\"           #> [282] \"media_characteristics.media_conc_dry_wet\"            #> [283] \"media_characteristics.media_conc_comments\"           #> [284] \"media_characteristics.media_moisture_pct_mean_op\"    #> [285] \"media_characteristics.media_moisture_pct_mean\"       #> [286] \"media_characteristics.media_moisture_pct_min_op\"     #> [287] \"media_characteristics.media_moisture_pct_min\"        #> [288] \"media_characteristics.media_moisture_pct_max_op\"     #> [289] \"media_characteristics.media_moisture_pct_max\"        #> [290] \"media_characteristics.media_moisture_comments\"       #> [291] \"media_characteristics.media_cec_mean_op\"             #> [292] \"media_characteristics.media_cec_mean\"                #> [293] \"media_characteristics.media_cec_min_op\"              #> [294] \"media_characteristics.media_cec_min\"                 #> [295] \"media_characteristics.media_cec_max_op\"              #> [296] \"media_characteristics.media_cec_max\"                 #> [297] \"media_characteristics.media_cec_unit\"                #> [298] \"media_characteristics.media_cec_comments\"            #> [299] \"media_characteristics.media_ph_mean_op\"              #> [300] \"media_characteristics.media_ph_mean\"                 #> [301] \"media_characteristics.media_ph_min_op\"               #> [302] \"media_characteristics.media_ph_min\"                  #> [303] \"media_characteristics.media_ph_max_op\"               #> [304] \"media_characteristics.media_ph_max\"                  #> [305] \"media_characteristics.media_ph_comments\"             #> [306] \"media_characteristics.media_org_matter_mean_op\"      #> [307] \"media_characteristics.media_org_matter_mean\"         #> [308] \"media_characteristics.media_org_matter_min_op\"       #> [309] \"media_characteristics.media_org_matter_min\"          #> [310] \"media_characteristics.media_org_matter_max_op\"       #> [311] \"media_characteristics.media_org_matter_max\"          #> [312] \"media_characteristics.media_org_matter_unit\"         #> [313] \"media_characteristics.media_org_matter_type\"         #> [314] \"media_characteristics.media_org_matter_comments\"     #> [315] \"media_characteristics.media_temperature_mean_op\"     #> [316] \"media_characteristics.media_temperature_mean\"        #> [317] \"media_characteristics.media_temperature_min_op\"      #> [318] \"media_characteristics.media_temperature_min\"         #> [319] \"media_characteristics.media_temperature_max_op\"      #> [320] \"media_characteristics.media_temperature_max\"         #> [321] \"media_characteristics.media_temperature_unit\"        #> [322] \"media_characteristics.media_temperature_comments\"    #> [323] \"media_characteristics.media_alkalinity_mean_op\"      #> [324] \"media_characteristics.media_alkalinity_mean\"         #> [325] \"media_characteristics.media_alkalinity_min_op\"       #> [326] \"media_characteristics.media_alkalinity_min\"          #> [327] \"media_characteristics.media_alkalinity_max_op\"       #> [328] \"media_characteristics.media_alkalinity_max\"          #> [329] \"media_characteristics.media_alkalinity_unit\"         #> [330] \"media_characteristics.media_alkalinity_comments\"     #> [331] \"media_characteristics.media_hardness_mean_op\"        #> [332] \"media_characteristics.media_hardness_mean\"           #> [333] \"media_characteristics.media_hardness_min_op\"         #> [334] \"media_characteristics.media_hardness_min\"            #> [335] \"media_characteristics.media_hardness_max_op\"         #> [336] \"media_characteristics.media_hardness_max\"            #> [337] \"media_characteristics.media_hardness_unit\"           #> [338] \"media_characteristics.media_hardness_comments\"       #> [339] \"media_characteristics.dissolved_oxygen_mean_op\"      #> [340] \"media_characteristics.dissolved_oxygen_mean\"         #> [341] \"media_characteristics.dissolved_oxygen_min_op\"       #> [342] \"media_characteristics.dissolved_oxygen_min\"          #> [343] \"media_characteristics.dissolved_oxygen_max_op\"       #> [344] \"media_characteristics.dissolved_oxygen_max\"          #> [345] \"media_characteristics.dissolved_oxygen_unit\"         #> [346] \"media_characteristics.dissolved_oxygen_comments\"     #> [347] \"media_characteristics.media_salinity_mean_op\"        #> [348] \"media_characteristics.media_salinity_mean\"           #> [349] \"media_characteristics.media_salinity_min_op\"         #> [350] \"media_characteristics.media_salinity_min\"            #> [351] \"media_characteristics.media_salinity_max_op\"         #> [352] \"media_characteristics.media_salinity_max\"            #> [353] \"media_characteristics.media_salinity_unit\"           #> [354] \"media_characteristics.media_salinity_comments\"       #> [355] \"media_characteristics.media_conductivity_mean_op\"    #> [356] \"media_characteristics.media_conductivity_mean\"       #> [357] \"media_characteristics.media_conductivity_min_op\"     #> [358] \"media_characteristics.media_conductivity_min\"        #> [359] \"media_characteristics.media_conductivity_max_op\"     #> [360] \"media_characteristics.media_conductivity_max\"        #> [361] \"media_characteristics.media_conductivity_unit\"       #> [362] \"media_characteristics.media_conductivity_comments\"   #> [363] \"media_characteristics.media_org_carbon_mean_op\"      #> [364] \"media_characteristics.media_org_carbon_mean\"         #> [365] \"media_characteristics.media_org_carbon_min_op\"       #> [366] \"media_characteristics.media_org_carbon_min\"          #> [367] \"media_characteristics.media_org_carbon_max_op\"       #> [368] \"media_characteristics.media_org_carbon_max\"          #> [369] \"media_characteristics.media_org_carbon_unit\"         #> [370] \"media_characteristics.media_org_carbon_comments\"     #> [371] \"media_characteristics.media_humic_acid_mean_op\"      #> [372] \"media_characteristics.media_humic_acid_mean\"         #> [373] \"media_characteristics.media_humic_acid_min_op\"       #> [374] \"media_characteristics.media_humic_acid_min\"          #> [375] \"media_characteristics.media_humic_acid_max_op\"       #> [376] \"media_characteristics.media_humic_acid_max\"          #> [377] \"media_characteristics.media_humic_acid_unit\"         #> [378] \"media_characteristics.media_humic_acid_comments\"     #> [379] \"media_characteristics.media_calcium_mean_op\"         #> [380] \"media_characteristics.media_calcium_mean\"            #> [381] \"media_characteristics.media_calcium_min_op\"          #> [382] \"media_characteristics.media_calcium_min\"             #> [383] \"media_characteristics.media_calcium_max_op\"          #> [384] \"media_characteristics.media_calcium_max\"             #> [385] \"media_characteristics.media_calcium_unit\"            #> [386] \"media_characteristics.media_calcium_comments\"        #> [387] \"media_characteristics.media_magnesium_mean_op\"       #> [388] \"media_characteristics.media_magnesium_mean\"          #> [389] \"media_characteristics.media_magnesium_min_op\"        #> [390] \"media_characteristics.media_magnesium_min\"           #> [391] \"media_characteristics.media_magnesium_max_op\"        #> [392] \"media_characteristics.media_magnesium_max\"           #> [393] \"media_characteristics.media_magnesium_unit\"          #> [394] \"media_characteristics.media_magnesium_comments\"      #> [395] \"media_characteristics.media_sodium_mean_op\"          #> [396] \"media_characteristics.media_sodium_mean\"             #> [397] \"media_characteristics.media_sodium_min_op\"           #> [398] \"media_characteristics.media_sodium_min\"              #> [399] \"media_characteristics.media_sodium_max_op\"           #> [400] \"media_characteristics.media_sodium_max\"              #> [401] \"media_characteristics.media_sodium_unit\"             #> [402] \"media_characteristics.media_sodium_comments\"         #> [403] \"media_characteristics.media_potassium_mean_op\"       #> [404] \"media_characteristics.media_potassium_mean\"          #> [405] \"media_characteristics.media_potassium_min_op\"        #> [406] \"media_characteristics.media_potassium_min\"           #> [407] \"media_characteristics.media_potassium_max_op\"        #> [408] \"media_characteristics.media_potassium_max\"           #> [409] \"media_characteristics.media_potassium_unit\"          #> [410] \"media_characteristics.media_potassium_comments\"      #> [411] \"media_characteristics.media_sulfate_mean_op\"         #> [412] \"media_characteristics.media_sulfate_mean\"            #> [413] \"media_characteristics.media_sulfate_min_op\"          #> [414] \"media_characteristics.media_sulfate_min\"             #> [415] \"media_characteristics.media_sulfate_max_op\"          #> [416] \"media_characteristics.media_sulfate_max\"             #> [417] \"media_characteristics.media_sulfate_unit\"            #> [418] \"media_characteristics.media_sulfate_comments\"        #> [419] \"media_characteristics.media_chlorine_mean_op\"        #> [420] \"media_characteristics.media_chlorine_mean\"           #> [421] \"media_characteristics.media_chlorine_min_op\"         #> [422] \"media_characteristics.media_chlorine_min\"            #> [423] \"media_characteristics.media_chlorine_max_op\"         #> [424] \"media_characteristics.media_chlorine_max\"            #> [425] \"media_characteristics.media_chlorine_unit\"           #> [426] \"media_characteristics.media_chlorine_comments\"       #> [427] \"media_characteristics.media_diss_carbon_mean_op\"     #> [428] \"media_characteristics.media_diss_carbon_mean\"        #> [429] \"media_characteristics.media_diss_carbon_min_op\"      #> [430] \"media_characteristics.media_diss_carbon_min\"         #> [431] \"media_characteristics.media_diss_carbon_max_op\"      #> [432] \"media_characteristics.media_diss_carbon_max\"         #> [433] \"media_characteristics.media_diss_carbon_unit\"        #> [434] \"media_characteristics.media_diss_carbon_comments\"    #> [435] \"media_characteristics.media_sulfur_mean_op\"          #> [436] \"media_characteristics.media_sulfur_mean\"             #> [437] \"media_characteristics.media_sulfur_min_op\"           #> [438] \"media_characteristics.media_sulfur_min\"              #> [439] \"media_characteristics.media_sulfur_max_op\"           #> [440] \"media_characteristics.media_sulfur_max\"              #> [441] \"media_characteristics.media_sulfur_unit\"             #> [442] \"media_characteristics.media_sulfur_comments\"         #> [443] \"references.reference_number\"                         #> [444] \"references.reference_db\"                             #> [445] \"references.reference_type\"                           #> [446] \"references.author\"                                   #> [447] \"references.title\"                                    #> [448] \"references.source\"                                   #> [449] \"references.publication_year\"                         #> [450] \"references.doi\"                                      #> [451] \"results.result_id\"                                   #> [452] \"results.test_id\"                                     #> [453] \"results.sample_size_mean_op\"                         #> [454] \"results.sample_size_mean\"                            #> [455] \"results.sample_size_min_op\"                          #> [456] \"results.sample_size_min\"                             #> [457] \"results.sample_size_max_op\"                          #> [458] \"results.sample_size_max\"                             #> [459] \"results.sample_size_unit\"                            #> [460] \"results.sample_size_comments\"                        #> [461] \"results.obs_duration_mean_op\"                        #> [462] \"results.obs_duration_mean\"                           #> [463] \"results.obs_duration_min_op\"                         #> [464] \"results.obs_duration_min\"                            #> [465] \"results.obs_duration_max_op\"                         #> [466] \"results.obs_duration_max\"                            #> [467] \"results.obs_duration_unit\"                           #> [468] \"results.obs_duration_comments\"                       #> [469] \"results.endpoint\"                                    #> [470] \"results.endpoint_comments\"                           #> [471] \"results.trend\"                                       #> [472] \"results.effect\"                                      #> [473] \"results.effect_comments\"                             #> [474] \"results.measurement\"                                 #> [475] \"results.measurement_comments\"                        #> [476] \"results.response_site\"                               #> [477] \"results.response_site_comments\"                      #> [478] \"results.effect_pct_mean_op\"                          #> [479] \"results.effect_pct_mean\"                             #> [480] \"results.effect_pct_min_op\"                           #> [481] \"results.effect_pct_min\"                              #> [482] \"results.effect_pct_max_op\"                           #> [483] \"results.effect_pct_max\"                              #> [484] \"results.effect_pct_comments\"                         #> [485] \"results.conc1_type\"                                  #> [486] \"results.ion1\"                                        #> [487] \"results.conc1_mean_op\"                               #> [488] \"results.conc1_mean\"                                  #> [489] \"results.conc1_min_op\"                                #> [490] \"results.conc1_min\"                                   #> [491] \"results.conc1_max_op\"                                #> [492] \"results.conc1_max\"                                   #> [493] \"results.conc1_unit\"                                  #> [494] \"results.conc1_comments\"                              #> [495] \"results.conc2_type\"                                  #> [496] \"results.ion2\"                                        #> [497] \"results.conc2_mean_op\"                               #> [498] \"results.conc2_mean\"                                  #> [499] \"results.conc2_min_op\"                                #> [500] \"results.conc2_min\"                                   #> [501] \"results.conc2_max_op\"                                #> [502] \"results.conc2_max\"                                   #> [503] \"results.conc2_unit\"                                  #> [504] \"results.conc2_comments\"                              #> [505] \"results.conc3_type\"                                  #> [506] \"results.ion3\"                                        #> [507] \"results.conc3_mean_op\"                               #> [508] \"results.conc3_mean\"                                  #> [509] \"results.conc3_min_op\"                                #> [510] \"results.conc3_min\"                                   #> [511] \"results.conc3_max_op\"                                #> [512] \"results.conc3_max\"                                   #> [513] \"results.conc3_unit\"                                  #> [514] \"results.conc3_comments\"                              #> [515] \"results.bcf1_mean_op\"                                #> [516] \"results.bcf1_mean\"                                   #> [517] \"results.bcf1_min_op\"                                 #> [518] \"results.bcf1_min\"                                    #> [519] \"results.bcf1_max_op\"                                 #> [520] \"results.bcf1_max\"                                    #> [521] \"results.bcf1_unit\"                                   #> [522] \"results.bcf1_comments\"                               #> [523] \"results.bcf2_mean_op\"                                #> [524] \"results.bcf2_mean\"                                   #> [525] \"results.bcf2_min_op\"                                 #> [526] \"results.bcf2_min\"                                    #> [527] \"results.bcf2_max_op\"                                 #> [528] \"results.bcf2_max\"                                    #> [529] \"results.bcf2_unit\"                                   #> [530] \"results.bcf2_comments\"                               #> [531] \"results.bcf3_mean_op\"                                #> [532] \"results.bcf3_mean\"                                   #> [533] \"results.bcf3_min_op\"                                 #> [534] \"results.bcf3_min\"                                    #> [535] \"results.bcf3_max_op\"                                 #> [536] \"results.bcf3_max\"                                    #> [537] \"results.bcf3_unit\"                                   #> [538] \"results.bcf3_comments\"                               #> [539] \"results.significance_code\"                           #> [540] \"results.significance_type\"                           #> [541] \"results.significance_level_mean_op\"                  #> [542] \"results.significance_level_mean\"                     #> [543] \"results.significance_level_min_op\"                   #> [544] \"results.significance_level_min\"                      #> [545] \"results.significance_level_max_op\"                   #> [546] \"results.significance_level_max\"                      #> [547] \"results.significance_comments\"                       #> [548] \"results.chem_analysis_method\"                        #> [549] \"results.chem_analysis_method_comments\"               #> [550] \"results.endpoint_assigned\"                           #> [551] \"results.organism_final_wt_mean_op\"                   #> [552] \"results.organism_final_wt_mean\"                      #> [553] \"results.organism_final_wt_min_op\"                    #> [554] \"results.organism_final_wt_min\"                       #> [555] \"results.organism_final_wt_max_op\"                    #> [556] \"results.organism_final_wt_max\"                       #> [557] \"results.organism_final_wt_unit\"                      #> [558] \"results.organism_final_wt_comments\"                  #> [559] \"results.intake_rate_mean_op\"                         #> [560] \"results.intake_rate_mean\"                            #> [561] \"results.intake_rate_min_op\"                          #> [562] \"results.intake_rate_min\"                             #> [563] \"results.intake_rate_max_op\"                          #> [564] \"results.intake_rate_max\"                             #> [565] \"results.intake_rate_unit\"                            #> [566] \"results.intake_rate_comments\"                        #> [567] \"results.lipid_pct_mean_op\"                           #> [568] \"results.lipid_pct_mean\"                              #> [569] \"results.lipid_pct_min_op\"                            #> [570] \"results.lipid_pct_min\"                               #> [571] \"results.lipid_pct_max_op\"                            #> [572] \"results.lipid_pct_max\"                               #> [573] \"results.lipid_pct_comments\"                          #> [574] \"results.dry_wet\"                                     #> [575] \"results.dry_wet_pct_mean_op\"                         #> [576] \"results.dry_wet_pct_mean\"                            #> [577] \"results.dry_wet_pct_min_op\"                          #> [578] \"results.dry_wet_pct_min\"                             #> [579] \"results.dry_wet_pct_max_op\"                          #> [580] \"results.dry_wet_pct_max\"                             #> [581] \"results.dry_wet_pct_comments\"                        #> [582] \"results.steady_state\"                                #> [583] \"results.additional_comments\"                         #> [584] \"results.companion_tag\"                               #> [585] \"results.old_terretox_result_number\"                  #> [586] \"results.created_date\"                                #> [587] \"results.modified_date\"                               #> [588] \"species.species_number\"                              #> [589] \"species.common_name\"                                 #> [590] \"species.latin_name\"                                  #> [591] \"species.kingdom\"                                     #> [592] \"species.phylum_division\"                             #> [593] \"species.subphylum_div\"                               #> [594] \"species.superclass\"                                  #> [595] \"species.class\"                                       #> [596] \"species.tax_order\"                                   #> [597] \"species.family\"                                      #> [598] \"species.genus\"                                       #> [599] \"species.species\"                                     #> [600] \"species.subspecies\"                                  #> [601] \"species.variety\"                                     #> [602] \"species.ecotox_group\"                                #> [603] \"species.ncbi_taxid\"                                  #> [604] \"species_synonyms.species_number\"                     #> [605] \"species_synonyms.latin_name\"                         #> [606] \"chemicals.cas_number\"                                #> [607] \"chemicals.chemical_name\"                             #> [608] \"chemicals.ecotox_group\"                              #> [609] \"chemicals.dtxsid\"                                    #> [610] \"application_frequency_codes.code\"                    #> [611] \"application_frequency_codes.description\"             #> [612] \"application_type_codes.code\"                         #> [613] \"application_type_codes.description\"                  #> [614] \"chemical_analysis_codes.code\"                        #> [615] \"chemical_analysis_codes.description\"                 #> [616] \"chemical_formulation_codes.code\"                     #> [617] \"chemical_formulation_codes.description\"              #> [618] \"chemical_grade_codes.code\"                           #> [619] \"chemical_grade_codes.description\"                    #> [620] \"concentration_type_codes.code\"                       #> [621] \"concentration_type_codes.description\"                #> [622] \"concentration_unit_codes.code\"                       #> [623] \"concentration_unit_codes.description\"                #> [624] \"control_type_codes.code\"                             #> [625] \"control_type_codes.description\"                      #> [626] \"dose_stat_method_codes.code\"                         #> [627] \"dose_stat_method_codes.description\"                  #> [628] \"duration_unit_codes.code\"                            #> [629] \"duration_unit_codes.description\"                     #> [630] \"effect_codes.code\"                                   #> [631] \"effect_codes.description\"                            #> [632] \"endpoint_assigned_codes.code\"                        #> [633] \"endpoint_assigned_codes.description\"                 #> [634] \"endpoint_codes.code\"                                 #> [635] \"endpoint_codes.description\"                          #> [636] \"exposure_type_codes.code\"                            #> [637] \"exposure_type_codes.description\"                     #> [638] \"field_study_type_codes.code\"                         #> [639] \"field_study_type_codes.description\"                  #> [640] \"gender_codes.code\"                                   #> [641] \"gender_codes.description\"                            #> [642] \"geographic_codes.code\"                               #> [643] \"geographic_codes.description\"                        #> [644] \"habitat_codes.code\"                                  #> [645] \"habitat_codes.description\"                           #> [646] \"ion_codes.code\"                                      #> [647] \"ion_codes.description\"                               #> [648] \"lifestage_codes.code\"                                #> [649] \"lifestage_codes.description\"                         #> [650] \"measurement_codes.code\"                              #> [651] \"measurement_codes.description\"                       #> [652] \"media_char_unit_codes.code\"                          #> [653] \"media_char_unit_codes.description\"                   #> [654] \"media_type_codes.code\"                               #> [655] \"media_type_codes.description\"                        #> [656] \"organic_matter_type_codes.code\"                      #> [657] \"organic_matter_type_codes.description\"               #> [658] \"organism_source_codes.code\"                          #> [659] \"organism_source_codes.description\"                   #> [660] \"radio_label_codes.code\"                              #> [661] \"radio_label_codes.description\"                       #> [662] \"response_site_codes.code\"                            #> [663] \"response_site_codes.description\"                     #> [664] \"sample_size_unit_codes.code\"                         #> [665] \"sample_size_unit_codes.description\"                  #> [666] \"season_codes.code\"                                   #> [667] \"season_codes.description\"                            #> [668] \"statistical_significance_codes.code\"                 #> [669] \"statistical_significance_codes.description\"          #> [670] \"substrate_codes.code\"                                #> [671] \"substrate_codes.description\"                         #> [672] \"test_location_codes.code\"                            #> [673] \"test_location_codes.description\"                     #> [674] \"test_method_codes.code\"                              #> [675] \"test_method_codes.description\"                       #> [676] \"test_type_codes.code\"                                #> [677] \"test_type_codes.description\"                         #> [678] \"trend_codes.code\"                                    #> [679] \"trend_codes.description\"                             #> [680] \"weight_unit_codes.code\"                              #> [681] \"weight_unit_codes.description\"                       #> [682] \"length_unit_codes.code\"                              #> [683] \"length_unit_codes.description\"                       #> [684] \"length_type_codes.code\"                              #> [685] \"length_type_codes.description\"                        ## All except fields from the tables 'chemical_carriers', 'media_characteristics', ## 'doses', 'dose_responses', 'dose_response_details', 'dose_response_links' and ## 'dose_stat_method_codes' that are available from the ECOTOX database: list_ecotox_fields(\"full\") #>   [1] \"tests.test_id\"                              #>   [2] \"tests.reference_number\"                     #>   [3] \"tests.test_cas\"                             #>   [4] \"tests.test_grade\"                           #>   [5] \"tests.test_grade_comments\"                  #>   [6] \"tests.test_formulation\"                     #>   [7] \"tests.test_formulation_comments\"            #>   [8] \"tests.test_radiolabel\"                      #>   [9] \"tests.test_radiolabel_comments\"             #>  [10] \"tests.test_purity_mean_op\"                  #>  [11] \"tests.test_purity_mean\"                     #>  [12] \"tests.test_purity_min_op\"                   #>  [13] \"tests.test_purity_min\"                      #>  [14] \"tests.test_purity_max_op\"                   #>  [15] \"tests.test_purity_max\"                      #>  [16] \"tests.test_purity_comments\"                 #>  [17] \"tests.test_characteristics\"                 #>  [18] \"tests.species_number\"                       #>  [19] \"tests.organism_habitat\"                     #>  [20] \"tests.organism_source\"                      #>  [21] \"tests.organism_source_comments\"             #>  [22] \"tests.organism_lifestage\"                   #>  [23] \"tests.organism_lifestage_comments\"          #>  [24] \"tests.organism_age_mean_op\"                 #>  [25] \"tests.organism_age_mean\"                    #>  [26] \"tests.organism_age_min_op\"                  #>  [27] \"tests.organism_age_min\"                     #>  [28] \"tests.organism_age_max_op\"                  #>  [29] \"tests.organism_age_max\"                     #>  [30] \"tests.organism_age_unit\"                    #>  [31] \"tests.organism_init_wt_mean_op\"             #>  [32] \"tests.organism_init_wt_mean\"                #>  [33] \"tests.organism_init_wt_min_op\"              #>  [34] \"tests.organism_init_wt_min\"                 #>  [35] \"tests.organism_init_wt_max_op\"              #>  [36] \"tests.organism_init_wt_max\"                 #>  [37] \"tests.organism_init_wt_unit\"                #>  [38] \"tests.organism_characteristics\"             #>  [39] \"tests.organism_gender\"                      #>  [40] \"tests.organism_length_mean_op\"              #>  [41] \"tests.organism_length_mean\"                 #>  [42] \"tests.organism_length_min_op\"               #>  [43] \"tests.organism_length_min\"                  #>  [44] \"tests.organism_length_max_op\"               #>  [45] \"tests.organism_length_max\"                  #>  [46] \"tests.organism_length_unit\"                 #>  [47] \"tests.organism_length_type\"                 #>  [48] \"tests.organism_strain\"                      #>  [49] \"tests.experimental_design\"                  #>  [50] \"tests.study_duration_mean_op\"               #>  [51] \"tests.study_duration_mean\"                  #>  [52] \"tests.study_duration_min_op\"                #>  [53] \"tests.study_duration_min\"                   #>  [54] \"tests.study_duration_max_op\"                #>  [55] \"tests.study_duration_max\"                   #>  [56] \"tests.study_duration_unit\"                  #>  [57] \"tests.study_duration_comments\"              #>  [58] \"tests.exposure_duration_mean_op\"            #>  [59] \"tests.exposure_duration_mean\"               #>  [60] \"tests.exposure_duration_min_op\"             #>  [61] \"tests.exposure_duration_min\"                #>  [62] \"tests.exposure_duration_max_op\"             #>  [63] \"tests.exposure_duration_max\"                #>  [64] \"tests.exposure_duration_unit\"               #>  [65] \"tests.exposure_duration_comments\"           #>  [66] \"tests.study_type\"                           #>  [67] \"tests.study_type_comments\"                  #>  [68] \"tests.test_type\"                            #>  [69] \"tests.test_type_comments\"                   #>  [70] \"tests.test_location\"                        #>  [71] \"tests.test_location_comments\"               #>  [72] \"tests.test_method\"                          #>  [73] \"tests.test_method_comments\"                 #>  [74] \"tests.exposure_type\"                        #>  [75] \"tests.exposure_type_comments\"               #>  [76] \"tests.control_type\"                         #>  [77] \"tests.control_type_comments\"                #>  [78] \"tests.media_type\"                           #>  [79] \"tests.media_type_comments\"                  #>  [80] \"tests.num_doses_mean_op\"                    #>  [81] \"tests.num_doses_mean\"                       #>  [82] \"tests.num_doses_min_op\"                     #>  [83] \"tests.num_doses_min\"                        #>  [84] \"tests.num_doses_max_op\"                     #>  [85] \"tests.num_doses_max\"                        #>  [86] \"tests.num_doses_comments\"                   #>  [87] \"tests.other_effect_comments\"                #>  [88] \"tests.application_freq_mean_op\"             #>  [89] \"tests.application_freq_mean\"                #>  [90] \"tests.application_freq_min_op\"              #>  [91] \"tests.application_freq_min\"                 #>  [92] \"tests.application_freq_max_op\"              #>  [93] \"tests.application_freq_max\"                 #>  [94] \"tests.application_freq_unit\"                #>  [95] \"tests.application_freq_comments\"            #>  [96] \"tests.application_type\"                     #>  [97] \"tests.application_type_comments\"            #>  [98] \"tests.application_rate\"                     #>  [99] \"tests.application_rate_unit\"                #> [100] \"tests.application_date\"                     #> [101] \"tests.application_date_comments\"            #> [102] \"tests.application_season\"                   #> [103] \"tests.application_season_comments\"          #> [104] \"tests.subhabitat\"                           #> [105] \"tests.subhabitat_description\"               #> [106] \"tests.substrate\"                            #> [107] \"tests.substrate_description\"                #> [108] \"tests.water_depth_mean_op\"                  #> [109] \"tests.water_depth_mean\"                     #> [110] \"tests.water_depth_min_op\"                   #> [111] \"tests.water_depth_min\"                      #> [112] \"tests.water_depth_max_op\"                   #> [113] \"tests.water_depth_max\"                      #> [114] \"tests.water_depth_unit\"                     #> [115] \"tests.water_depth_comments\"                 #> [116] \"tests.geographic_code\"                      #> [117] \"tests.geographic_location\"                  #> [118] \"tests.latitude\"                             #> [119] \"tests.longitude\"                            #> [120] \"tests.halflife_mean_op\"                     #> [121] \"tests.halflife_mean\"                        #> [122] \"tests.halflife_min_op\"                      #> [123] \"tests.halflife_min\"                         #> [124] \"tests.halflife_max_op\"                      #> [125] \"tests.halflife_max\"                         #> [126] \"tests.halflife_unit\"                        #> [127] \"tests.halflife_comments\"                    #> [128] \"tests.additional_comments\"                  #> [129] \"tests.created_date\"                         #> [130] \"tests.modified_date\"                        #> [131] \"tests.published_date\"                       #> [132] \"dose_responses.dose_resp_id\"                #> [133] \"dose_responses.test_id\"                     #> [134] \"dose_responses.sample_size_unit\"            #> [135] \"dose_responses.sample_size_comments\"        #> [136] \"dose_responses.effect_code\"                 #> [137] \"dose_responses.measurement_code\"            #> [138] \"dose_responses.measurement_comments\"        #> [139] \"dose_responses.response_site\"               #> [140] \"dose_responses.response_site_comments\"      #> [141] \"dose_responses.obs_duration_mean_op\"        #> [142] \"dose_responses.obs_duration_mean\"           #> [143] \"dose_responses.obs_duration_min_op\"         #> [144] \"dose_responses.obs_duration_min\"            #> [145] \"dose_responses.obs_duration_max_op\"         #> [146] \"dose_responses.obs_duration_max\"            #> [147] \"dose_responses.obs_duration_unit\"           #> [148] \"dose_responses.obs_duration_comments\"       #> [149] \"dose_responses.response_unit\"               #> [150] \"dose_responses.response_comments\"           #> [151] \"dose_responses.additional_comments\"         #> [152] \"references.reference_number\"                #> [153] \"references.reference_db\"                    #> [154] \"references.reference_type\"                  #> [155] \"references.author\"                          #> [156] \"references.title\"                           #> [157] \"references.source\"                          #> [158] \"references.publication_year\"                #> [159] \"references.doi\"                             #> [160] \"results.result_id\"                          #> [161] \"results.test_id\"                            #> [162] \"results.sample_size_mean_op\"                #> [163] \"results.sample_size_mean\"                   #> [164] \"results.sample_size_min_op\"                 #> [165] \"results.sample_size_min\"                    #> [166] \"results.sample_size_max_op\"                 #> [167] \"results.sample_size_max\"                    #> [168] \"results.sample_size_unit\"                   #> [169] \"results.sample_size_comments\"               #> [170] \"results.obs_duration_mean_op\"               #> [171] \"results.obs_duration_mean\"                  #> [172] \"results.obs_duration_min_op\"                #> [173] \"results.obs_duration_min\"                   #> [174] \"results.obs_duration_max_op\"                #> [175] \"results.obs_duration_max\"                   #> [176] \"results.obs_duration_unit\"                  #> [177] \"results.obs_duration_comments\"              #> [178] \"results.endpoint\"                           #> [179] \"results.endpoint_comments\"                  #> [180] \"results.trend\"                              #> [181] \"results.effect\"                             #> [182] \"results.effect_comments\"                    #> [183] \"results.measurement\"                        #> [184] \"results.measurement_comments\"               #> [185] \"results.response_site\"                      #> [186] \"results.response_site_comments\"             #> [187] \"results.effect_pct_mean_op\"                 #> [188] \"results.effect_pct_mean\"                    #> [189] \"results.effect_pct_min_op\"                  #> [190] \"results.effect_pct_min\"                     #> [191] \"results.effect_pct_max_op\"                  #> [192] \"results.effect_pct_max\"                     #> [193] \"results.effect_pct_comments\"                #> [194] \"results.conc1_type\"                         #> [195] \"results.ion1\"                               #> [196] \"results.conc1_mean_op\"                      #> [197] \"results.conc1_mean\"                         #> [198] \"results.conc1_min_op\"                       #> [199] \"results.conc1_min\"                          #> [200] \"results.conc1_max_op\"                       #> [201] \"results.conc1_max\"                          #> [202] \"results.conc1_unit\"                         #> [203] \"results.conc1_comments\"                     #> [204] \"results.conc2_type\"                         #> [205] \"results.ion2\"                               #> [206] \"results.conc2_mean_op\"                      #> [207] \"results.conc2_mean\"                         #> [208] \"results.conc2_min_op\"                       #> [209] \"results.conc2_min\"                          #> [210] \"results.conc2_max_op\"                       #> [211] \"results.conc2_max\"                          #> [212] \"results.conc2_unit\"                         #> [213] \"results.conc2_comments\"                     #> [214] \"results.conc3_type\"                         #> [215] \"results.ion3\"                               #> [216] \"results.conc3_mean_op\"                      #> [217] \"results.conc3_mean\"                         #> [218] \"results.conc3_min_op\"                       #> [219] \"results.conc3_min\"                          #> [220] \"results.conc3_max_op\"                       #> [221] \"results.conc3_max\"                          #> [222] \"results.conc3_unit\"                         #> [223] \"results.conc3_comments\"                     #> [224] \"results.bcf1_mean_op\"                       #> [225] \"results.bcf1_mean\"                          #> [226] \"results.bcf1_min_op\"                        #> [227] \"results.bcf1_min\"                           #> [228] \"results.bcf1_max_op\"                        #> [229] \"results.bcf1_max\"                           #> [230] \"results.bcf1_unit\"                          #> [231] \"results.bcf1_comments\"                      #> [232] \"results.bcf2_mean_op\"                       #> [233] \"results.bcf2_mean\"                          #> [234] \"results.bcf2_min_op\"                        #> [235] \"results.bcf2_min\"                           #> [236] \"results.bcf2_max_op\"                        #> [237] \"results.bcf2_max\"                           #> [238] \"results.bcf2_unit\"                          #> [239] \"results.bcf2_comments\"                      #> [240] \"results.bcf3_mean_op\"                       #> [241] \"results.bcf3_mean\"                          #> [242] \"results.bcf3_min_op\"                        #> [243] \"results.bcf3_min\"                           #> [244] \"results.bcf3_max_op\"                        #> [245] \"results.bcf3_max\"                           #> [246] \"results.bcf3_unit\"                          #> [247] \"results.bcf3_comments\"                      #> [248] \"results.significance_code\"                  #> [249] \"results.significance_type\"                  #> [250] \"results.significance_level_mean_op\"         #> [251] \"results.significance_level_mean\"            #> [252] \"results.significance_level_min_op\"          #> [253] \"results.significance_level_min\"             #> [254] \"results.significance_level_max_op\"          #> [255] \"results.significance_level_max\"             #> [256] \"results.significance_comments\"              #> [257] \"results.chem_analysis_method\"               #> [258] \"results.chem_analysis_method_comments\"      #> [259] \"results.endpoint_assigned\"                  #> [260] \"results.organism_final_wt_mean_op\"          #> [261] \"results.organism_final_wt_mean\"             #> [262] \"results.organism_final_wt_min_op\"           #> [263] \"results.organism_final_wt_min\"              #> [264] \"results.organism_final_wt_max_op\"           #> [265] \"results.organism_final_wt_max\"              #> [266] \"results.organism_final_wt_unit\"             #> [267] \"results.organism_final_wt_comments\"         #> [268] \"results.intake_rate_mean_op\"                #> [269] \"results.intake_rate_mean\"                   #> [270] \"results.intake_rate_min_op\"                 #> [271] \"results.intake_rate_min\"                    #> [272] \"results.intake_rate_max_op\"                 #> [273] \"results.intake_rate_max\"                    #> [274] \"results.intake_rate_unit\"                   #> [275] \"results.intake_rate_comments\"               #> [276] \"results.lipid_pct_mean_op\"                  #> [277] \"results.lipid_pct_mean\"                     #> [278] \"results.lipid_pct_min_op\"                   #> [279] \"results.lipid_pct_min\"                      #> [280] \"results.lipid_pct_max_op\"                   #> [281] \"results.lipid_pct_max\"                      #> [282] \"results.lipid_pct_comments\"                 #> [283] \"results.dry_wet\"                            #> [284] \"results.dry_wet_pct_mean_op\"                #> [285] \"results.dry_wet_pct_mean\"                   #> [286] \"results.dry_wet_pct_min_op\"                 #> [287] \"results.dry_wet_pct_min\"                    #> [288] \"results.dry_wet_pct_max_op\"                 #> [289] \"results.dry_wet_pct_max\"                    #> [290] \"results.dry_wet_pct_comments\"               #> [291] \"results.steady_state\"                       #> [292] \"results.additional_comments\"                #> [293] \"results.companion_tag\"                      #> [294] \"results.old_terretox_result_number\"         #> [295] \"results.created_date\"                       #> [296] \"results.modified_date\"                      #> [297] \"species.species_number\"                     #> [298] \"species.common_name\"                        #> [299] \"species.latin_name\"                         #> [300] \"species.kingdom\"                            #> [301] \"species.phylum_division\"                    #> [302] \"species.subphylum_div\"                      #> [303] \"species.superclass\"                         #> [304] \"species.class\"                              #> [305] \"species.tax_order\"                          #> [306] \"species.family\"                             #> [307] \"species.genus\"                              #> [308] \"species.species\"                            #> [309] \"species.subspecies\"                         #> [310] \"species.variety\"                            #> [311] \"species.ecotox_group\"                       #> [312] \"species.ncbi_taxid\"                         #> [313] \"species_synonyms.species_number\"            #> [314] \"species_synonyms.latin_name\"                #> [315] \"chemicals.cas_number\"                       #> [316] \"chemicals.chemical_name\"                    #> [317] \"chemicals.ecotox_group\"                     #> [318] \"chemicals.dtxsid\"                           #> [319] \"application_frequency_codes.code\"           #> [320] \"application_frequency_codes.description\"    #> [321] \"application_type_codes.code\"                #> [322] \"application_type_codes.description\"         #> [323] \"chemical_analysis_codes.code\"               #> [324] \"chemical_analysis_codes.description\"        #> [325] \"chemical_formulation_codes.code\"            #> [326] \"chemical_formulation_codes.description\"     #> [327] \"chemical_grade_codes.code\"                  #> [328] \"chemical_grade_codes.description\"           #> [329] \"concentration_type_codes.code\"              #> [330] \"concentration_type_codes.description\"       #> [331] \"concentration_unit_codes.code\"              #> [332] \"concentration_unit_codes.description\"       #> [333] \"control_type_codes.code\"                    #> [334] \"control_type_codes.description\"             #> [335] \"duration_unit_codes.code\"                   #> [336] \"duration_unit_codes.description\"            #> [337] \"effect_codes.code\"                          #> [338] \"effect_codes.description\"                   #> [339] \"endpoint_assigned_codes.code\"               #> [340] \"endpoint_assigned_codes.description\"        #> [341] \"endpoint_codes.code\"                        #> [342] \"endpoint_codes.description\"                 #> [343] \"exposure_type_codes.code\"                   #> [344] \"exposure_type_codes.description\"            #> [345] \"field_study_type_codes.code\"                #> [346] \"field_study_type_codes.description\"         #> [347] \"gender_codes.code\"                          #> [348] \"gender_codes.description\"                   #> [349] \"geographic_codes.code\"                      #> [350] \"geographic_codes.description\"               #> [351] \"habitat_codes.code\"                         #> [352] \"habitat_codes.description\"                  #> [353] \"ion_codes.code\"                             #> [354] \"ion_codes.description\"                      #> [355] \"lifestage_codes.code\"                       #> [356] \"lifestage_codes.description\"                #> [357] \"measurement_codes.code\"                     #> [358] \"measurement_codes.description\"              #> [359] \"media_char_unit_codes.code\"                 #> [360] \"media_char_unit_codes.description\"          #> [361] \"media_type_codes.code\"                      #> [362] \"media_type_codes.description\"               #> [363] \"organic_matter_type_codes.code\"             #> [364] \"organic_matter_type_codes.description\"      #> [365] \"organism_source_codes.code\"                 #> [366] \"organism_source_codes.description\"          #> [367] \"radio_label_codes.code\"                     #> [368] \"radio_label_codes.description\"              #> [369] \"response_site_codes.code\"                   #> [370] \"response_site_codes.description\"            #> [371] \"sample_size_unit_codes.code\"                #> [372] \"sample_size_unit_codes.description\"         #> [373] \"season_codes.code\"                          #> [374] \"season_codes.description\"                   #> [375] \"statistical_significance_codes.code\"        #> [376] \"statistical_significance_codes.description\" #> [377] \"substrate_codes.code\"                       #> [378] \"substrate_codes.description\"                #> [379] \"test_location_codes.code\"                   #> [380] \"test_location_codes.description\"            #> [381] \"test_method_codes.code\"                     #> [382] \"test_method_codes.description\"              #> [383] \"test_type_codes.code\"                       #> [384] \"test_type_codes.description\"                #> [385] \"trend_codes.code\"                           #> [386] \"trend_codes.description\"                    #> [387] \"weight_unit_codes.code\"                     #> [388] \"weight_unit_codes.description\"              #> [389] \"length_unit_codes.code\"                     #> [390] \"length_unit_codes.description\"              #> [391] \"length_type_codes.code\"                     #> [392] \"length_type_codes.description\""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/mixed_to_single_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert mixed units to a specific unit — mixed_to_single_unit","title":"Convert mixed units to a specific unit — mixed_to_single_unit","text":"Converts list mixed units specific unit, using units package.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/mixed_to_single_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert mixed units to a specific unit — mixed_to_single_unit","text":"","code":"mixed_to_single_unit(x, target_unit)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/mixed_to_single_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert mixed units to a specific unit — mixed_to_single_unit","text":"x mixed units object (units::mixed_units()) converted target_unit target_unit character string representing target unit","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/mixed_to_single_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert mixed units to a specific unit — mixed_to_single_unit","text":"Returns units object (?units::units). Values units converted target_unit returned NA.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/mixed_to_single_unit.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert mixed units to a specific unit — mixed_to_single_unit","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/mixed_to_single_unit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert mixed units to a specific unit — mixed_to_single_unit","text":"","code":"mishmash <- as_unit_ecotox(c(\"mg/L\", \"ppt w/v\", \"% w/v\", \"mmol/L\"))  ## Note that 'mmol/L' cannot be converted to 'ug/L' ## without a molar mass. It is returned as `NA` mixed_to_single_unit(mishmash, \"ug/L\") #> Units: [ug/L] #> [1] 1e+03 1e+06 1e+07    NA  mishmash <- as_unit_ecotox(c(\"h\", \"sec\", \"mi\", \"dph\"))  mixed_to_single_unit(mishmash, \"h\") #> Units: [h] #> [1] 1.000000e+00 2.777778e-04 1.666667e-02 2.400000e+01"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Process ECOTOX search results by converting character to dates where relevant — process_ecotox_dates","title":"Process ECOTOX search results by converting character to dates where relevant — process_ecotox_dates","text":"function search_ecotox() returns fields ECOTOX database . Fields represent dates usually formatted \"%m\\%d\\%Y\". Unfortunately, format consistently used throughout database. process_ecotox_dates() takes data.frame returned search_ecotox(), locates date columns, represented text, sanitises text converts Date objects. sanitise date fields much possible. correct dates. Dates without specified calender year, date range, illegal date format (even sanitation) returned NA.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process ECOTOX search results by converting character to dates where relevant — process_ecotox_dates","text":"","code":"process_ecotox_dates(x, .fns = as_date_ecotox, ..., .names = NULL)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process ECOTOX search results by converting character to dates where relevant — process_ecotox_dates","text":"x data.frame obtained search_ecotox(), dates need processed. .fns Function convert character Date. default as_date_ecotox() used also sanitises input. can also use .Date() want sanitation step. can also write custom function. ... Arguments passed .fns. .names 'glue' specification used rename date columns. default \"{.col}\", overwrite existing text columns date columns. can instance add suffix \"{.col}_date\" want rename resulting date columns.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process ECOTOX search results by converting character to dates where relevant — process_ecotox_dates","text":"Returns data.frame columns containing date information converted character format database actual date objects ( \"POSIXlt\" \"POSIXct\").","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_dates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process ECOTOX search results by converting character to dates where relevant — process_ecotox_dates","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process ECOTOX search results by converting character to dates where relevant — process_ecotox_dates","text":"","code":"if (check_ecotox_availability()) {   df <- search_ecotox(     list(       latin_name    = list(         terms          = c(\"Skeletonema\", \"Daphnia\"),         method         = \"contains\"       ),       chemical_name = list(         terms          = \"benzene\",         method         = \"exact\"       )     ), list_ecotox_fields(\"full\"))    df_dat <-     process_ecotox_dates(df, warn = FALSE) }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_numerics.html","id":null,"dir":"Reference","previous_headings":"","what":"Process ECOTOX search results by converting character to numeric where relevant — process_ecotox_numerics","title":"Process ECOTOX search results by converting character to numeric where relevant — process_ecotox_numerics","text":"function search_ecotox() returns fields ECOTOX database . Many numeric values stored database text. uncommon text fields converted directly need sanitising first. process_ecotox_numerics() takes data.frame returned search_ecotox(), locates numeric columns, represented text, sanitises text converts numerics.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_numerics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process ECOTOX search results by converting character to numeric where relevant — process_ecotox_numerics","text":"","code":"process_ecotox_numerics(   x,   .fns = as_numeric_ecotox,   ...,   add_units = FALSE,   .names = NULL )"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_numerics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process ECOTOX search results by converting character to numeric where relevant — process_ecotox_numerics","text":"x data.frame obtained search_ecotox(), numerics need processed. .fns Function convert character numeric. default as_numeric_ecotox() used also sanitises input. can also use .numeric() want sanitation step. can also write custom function. ... Arguments passed .fns. add_units logical value. set TRUE corresponding units parsed as_unit_ecotox() (available) added numeric value. .names 'glue' specification used rename numeric columns. default \"{.col}\", overwrite existing text columns numeric columns. can instance add suffix \"{.col}_num\" want rename resulting numeric columns.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_numerics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process ECOTOX search results by converting character to numeric where relevant — process_ecotox_numerics","text":"Returns data.frame columns containing numeric information converted character format database actual numerics.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_numerics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process ECOTOX search results by converting character to numeric where relevant — process_ecotox_numerics","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_numerics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process ECOTOX search results by converting character to numeric where relevant — process_ecotox_numerics","text":"","code":"if (check_ecotox_availability()) {   df <- search_ecotox(     list(       latin_name    = list(         terms          = c(\"Skeletonema\", \"Daphnia\"),         method         = \"contains\"       ),       chemical_name = list(         terms          = \"benzene\",         method         = \"exact\"       )     ), list_ecotox_fields(\"full\"))    df_num <-     process_ecotox_numerics(df, add_units = TRUE, warn = FALSE) }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Process ECOTOX search results by converting character to units where relevant — process_ecotox_units","title":"Process ECOTOX search results by converting character to units where relevant — process_ecotox_units","text":"function search_ecotox() returns fields ECOTOX database . Fields represent units standardised database. Therefore, format consistently used throughout database. process_ecotox_units() takes data.frame returned search_ecotox(), locates unit columns, represented text, sanitises text converts units::mixed_units() objects. sanitise unit fields much possible. Units interpreted returned arbitrary unit.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process ECOTOX search results by converting character to units where relevant — process_ecotox_units","text":"","code":"process_ecotox_units(x, .fns = as_unit_ecotox, ..., .names = NULL)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process ECOTOX search results by converting character to units where relevant — process_ecotox_units","text":"x data.frame obtained search_ecotox(), units need processed. .fns Function convert character unit. default as_unit_ecotox() used also sanitises input. can also write custom function. ... Arguments passed .fns. .names 'glue' specification used rename unit columns. default \"{.col}\", overwrite existing text columns unit columns. can instance add suffix \"{.col}_unit\" want rename resulting unit columns.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process ECOTOX search results by converting character to units where relevant — process_ecotox_units","text":"Returns data.frame columns containing unit information converted character format database actual unit objects ( ?units::units).","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_units.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Process ECOTOX search results by converting character to units where relevant — process_ecotox_units","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/process_ecotox_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process ECOTOX search results by converting character to units where relevant — process_ecotox_units","text":"","code":"if (check_ecotox_availability()) {   df <- search_ecotox(     list(       latin_name    = list(         terms          = c(\"Skeletonema\", \"Daphnia\"),         method         = \"contains\"       ),       chemical_name = list(         terms          = \"benzene\",         method         = \"exact\"       )     ), list_ecotox_fields(\"full\"))    df_unit <-     process_ecotox_units(df, warn = FALSE) }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/search_ecotox.html","id":null,"dir":"Reference","previous_headings":"","what":"Search and retrieve toxicity records from the database — search_ecotox","title":"Search and retrieve toxicity records from the database — search_ecotox","text":"Create (execute) SQL search query based basic search terms options. allows search database, without understand SQL.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/search_ecotox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search and retrieve toxicity records from the database — search_ecotox","text":"","code":"search_ecotox(   search,   output_fields = list_ecotox_fields(\"default\"),   group_by_results = TRUE,   compute = FALSE,   as_data_frame = TRUE,   ... )  search_ecotox_lazy(   search,   output_fields = list_ecotox_fields(\"default\"),   compute = FALSE,   ... )  search_query_ecotox(search, output_fields = list_ecotox_fields(\"default\"), ...)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/search_ecotox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search and retrieve toxicity records from the database — search_ecotox","text":"search named list containing search terms. names elements refer field (.e. table header) terms searched. Use list_ecotox_fields() obtain list available field names. element list contain another list least one element named 'terms'. contain vector character strings search terms. Optionally, second element named 'method' can provided set either 'contains' (default, missing) 'exact'. first case query match record indicated field contains search term. case 'exact' return exact matches. Note searches case sensitive, picky special (accented) characters. building local database (see build_ecotox_sqlite) special characters may treated differently different operating systems. sake reproducibility, user advised stick non-accented alpha-numeric characters. Search terms specific field (table header) combined ''. Meaning record matches terms returned. instance 'latin_name' 'Daphnia magna' 'Skeletonema costatum' searched, results species returned. Search terms across fields (table headers) combined '', narrow search. instance 'chemical_name' 'benzene' searched combination 'latin_name' 'Daphnia magna', tests Daphnia magna exposed benzene returned. search behaviour described desirable, user can either adjust query manually, use function perform several separate searches combine results afterwards. Beware field names ambiguous occur multiple tables (like cas_number' code'). searching fields, search result may expected. output_fields vector character strings indicating field names (table headers) included output. default [list_ecotox_fields](\"default\") used. Use [list_ecotox_fields](\"\") list available fields. group_by_results Ecological test results generally informative element ECOTOX database. Therefore, search function returns table unique results row. However, tables database ('chemical_carriers' 'dose_responses') one many relationship test results. means multiple chemical carriers can linked single test result, similarly, multiple doses can also linked single test result. default search results grouped test results. result doses chemical carriers may displayed output. Set group_by_results parameter FALSE order force SQLite output data (e.g., carriers). beware test results may duplicated cases. compute ECOTOXr package tries construct database queries lazy possible. Meaning R moves much heavy lifting possible database. search becomes complicated (e.g., including many output fields), may run trouble hit SQL parser limits. cases can set parameter TRUE. Database queries computed process joining tables. generally slower. Alternatively, try include less output fields order simplify query. as_data_frame logical value indicating whether result converted data.frame (default TRUE). set FALSE data returned tbl_df(). ... Arguments passed dbConnectEcotox() functions. can use database located default path (get_ecotox_path()).","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/search_ecotox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search and retrieve toxicity records from the database — search_ecotox","text":"case search_query_ecotox, character string containing SQL query returned. query built based provided search terms options. case search_ecotox data.frame returned based search query built search_query_ecotox. data.frame unmodified returned SQLite, meaning fields returned characters (even field types 'date' 'numeric'). Therefore, retrieved search results may need post-processing process_ecotox_numerics() as_numeric_ecotox() results tagged : time stamp; package version used; file path SQLite database used search (applicable). tags added attributes output table query.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/search_ecotox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search and retrieve toxicity records from the database — search_ecotox","text":"ECOTOX database stored locally SQLite file, can queried SQL. functions allow automatically generate SQL query send database, without understand SQL. function search_query_ecotox generates returns SQL query (can edited hand desired). can also directly call search_ecotox, first generate query, send database retrieve result. Although generated query optimized speed, able process common searches within acceptable time. time required retrieving data search query depends complexity query, size query speed machine. queries completed within seconds (several minutes ) modern machines. search require optimisation speed, try reordering search fields. can also edit query generated search_query_ecotox hand retrieve DBI::dbGetQuery(). Note package actively maintained function may revised future versions. order create reproducible results user must: always work official release CRAN document package database version used generate specific results (see also cite_ecotox()).","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/search_ecotox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Search and retrieve toxicity records from the database — search_ecotox","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/search_ecotox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search and retrieve toxicity records from the database — search_ecotox","text":"","code":"## let's find the ids of all ecotox tests on species ## where Latin names contain either of 2 specific genus names and ## where they were exposed to the chemical benzene if (check_ecotox_availability()) {   search <-     list(       latin_name    = list(         terms          = c(\"Skeletonema\", \"Daphnia\"),         method         = \"contains\"       ),       chemical_name = list(         terms          = \"benzene\",         method         = \"exact\"       )     )   ## rows in result each represent a unique test id from the database   result <- search_ecotox(search)   query  <- search_query_ecotox(search)   cat(query) } else {   print(\"Sorry, you need to use 'download_ecotox_data()' first in order for this to work.\") } #> [1] \"Sorry, you need to use 'download_ecotox_data()' first in order for this to work.\""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch.html","id":null,"dir":"Reference","previous_headings":"","what":"Search and retrieve toxicity records from the online database — websearch_ecotox","title":"Search and retrieve toxicity records from the online database — websearch_ecotox","text":"Functions search retrieve records online database https://cfpub.epa.gov/ecotox/search.cfm.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search and retrieve toxicity records from the online database — websearch_ecotox","text":"","code":"websearch_ecotox(   fields = list_ecotox_web_fields(),   habitat = c(\"aquire\", \"terrestrial\"),   verify_ssl = getOption(\"ECOTOXr_verify_ssl\"),   ... )  list_ecotox_web_fields(...)"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search and retrieve toxicity records from the online database — websearch_ecotox","text":"fields named list characters, used build search online search query https://cfpub.epa.gov/ecotox/search.cfm. Use list_ecotox_web_fields() construct valid list. habitat Use aquire (default) retrieve aquatic data, terrestrial , guessed , terrestrial data. verify_ssl set FALSE SSL certificate host (EPA) verified. Can also set option: options(ECOTOXr_verify_ssl = TRUE). Default TRUE. ... case list_ecotox_web_fields() dots can used search field values used update returned list fields. case websearch_ecotox() dots can used pass custom options underlying httr2::req_options() call. available field names, use names(list_ecotox_web_fields())","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search and retrieve toxicity records from the online database — websearch_ecotox","text":"Returns named list dplyr::tibbles search results. Results unpolished `' returned EPA's web service. list_ecotox_web_fields() returns named list fields can used web search EPA's ECOTOX database, using websearch_ecotox().","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search and retrieve toxicity records from the online database — websearch_ecotox","text":"functions described search retrieve records online database experimental. feature formally supported EPA, may break future iterations online database. functions form interface R ECOTOX website therefore limited restrictions described package documentation: ECOTOXr. functions therefore used caution.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Search and retrieve toxicity records from the online database — websearch_ecotox","text":"IMPORTANT: plan perform multiple adjacent searches (instance loop), please insert call Sys.sleep(). avoid overloading server getting IP address banned server.","code":""},{"path":[]},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Search and retrieve toxicity records from the online database — websearch_ecotox","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search and retrieve toxicity records from the online database — websearch_ecotox","text":"","code":"if (interactive()) {   search_fields <-     list_ecotox_web_fields(       txAdvancedSpecEntries     = \"daphnia magna\",       RBSPECSEARCHTYPE          = \"EXACT\",       txAdvancedChemicalEntries = \"benzene\",       RBCHEMSEARCHTYPE          = \"EXACT\")   search_results <- websearch_ecotox(search_fields) }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch_comptox.html","id":null,"dir":"Reference","previous_headings":"","what":"Search and retrieve substance information from https://comptox.epa.gov/dashboard — websearch_comptox","title":"Search and retrieve substance information from https://comptox.epa.gov/dashboard — websearch_comptox","text":"Search https://comptox.epa.gov/dashboard substances chemico-physical properties meta-information.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch_comptox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search and retrieve substance information from https://comptox.epa.gov/dashboard — websearch_comptox","text":"","code":"websearch_comptox(   searchItems,   identifierTypes = c(\"chemical_name\", \"CASRN\", \"INCHIKEY\", \"dtxsid\"),   inputType = c(\"IDENTIFIER\", \"DTXCID\", \"INCHIKEY_SKELETON\", \"MSREADY_FORMULA\",     \"EXACT_FORMULA\", \"MASS\"),   downloadItems = c(\"DTXCID\", \"CASRN\", \"INCHIKEY\", \"IUPAC_NAME\", \"SMILES\",     \"INCHI_STRING\", \"MS_READY_SMILES\", \"QSAR_READY_SMILES\", \"MOLECULAR_FORMULA\",     \"AVERAGE_MASS\", \"MONOISOTOPIC_MASS\", \"QC_LEVEL\", \"SAFETY_DATA\", \"EXPOCAST\",     \"DATA_SOURCES\", \"TOXVAL_DATA\", \"NUMBER_OF_PUBMED_ARTICLES\", \"PUBCHEM_DATA_SOURCES\",     \"CPDAT_COUNT\", \"IRIS_LINK\", \"PPRTV_LINK\", \"WIKIPEDIA_ARTICLE\", \"QC_NOTES\",     \"ABSTRACT_SHIFTER\", \"TOXPRINT_FINGERPRINT\", \"ACTOR_REPORT\", \"SYNONYM_IDENTIFIER\",     \"RELATED_RELATIONSHIP\", \"ASSOCIATED_TOXCAST_ASSAYS\",       \"TOXVAL_DETAILS\",     \"CHEMICAL_PROPERTIES_DETAILS\", \"BIOCONCENTRATION_FACTOR_TEST_PRED\",     \"BOILING_POINT_DEGC_TEST_PRED\", \"48HR_DAPHNIA_LC50_MOL/L_TEST_PRED\",     \"DENSITY_G/CM^3_TEST_PRED\", \"DEVTOX_TEST_PRED\",     \"96HR_FATHEAD_MINNOW_MOL/L_TEST_PRED\", \"FLASH_POINT_DEGC_TEST_PRED\",     \"MELTING_POINT_DEGC_TEST_PRED\", \"AMES_MUTAGENICITY_TEST_PRED\",     \"ORAL_RAT_LD50_MOL/KG_TEST_PRED\", \"SURFACE_TENSION_DYN/CM_TEST_PRED\",     \"THERMAL_CONDUCTIVITY_MW/(M*K)_TEST_PRED\",     \"TETRAHYMENA_PYRIFORMIS_IGC50_MOL/L_TEST_PRED\", \"VISCOSITY_CP_CP_TEST_PRED\",           \"VAPOR_PRESSURE_MMHG_TEST_PRED\", \"WATER_SOLUBILITY_MOL/L_TEST_PRED\",     \"ATMOSPHERIC_HYDROXYLATION_RATE_(AOH)_CM3/MOLECULE*SEC_OPERA_PRED\",     \"BIOCONCENTRATION_FACTOR_OPERA_PRED\",     \"BIODEGRADATION_HALF_LIFE_DAYS_DAYS_OPERA_PRED\", \"BOILING_POINT_DEGC_OPERA_PRED\",     \"HENRYS_LAW_ATM-M3/MOLE_OPERA_PRED\", \"OPERA_KM_DAYS_OPERA_PRED\",     \"OCTANOL_AIR_PARTITION_COEFF_LOGKOA_OPERA_PRED\",     \"SOIL_ADSORPTION_COEFFICIENT_KOC_L/KG_OPERA_PRED\",     \"OCTANOL_WATER_PARTITION_LOGP_OPERA_PRED\", \"MELTING_POINT_DEGC_OPERA_PRED\",           \"OPERA_PKAA_OPERA_PRED\", \"OPERA_PKAB_OPERA_PRED\", \"VAPOR_PRESSURE_MMHG_OPERA_PRED\",     \"WATER_SOLUBILITY_MOL/L_OPERA_PRED\",     \"EXPOCAST_MEDIAN_EXPOSURE_PREDICTION_MG/KG-BW/DAY\", \"NHANES\",     \"TOXCAST_NUMBER_OF_ASSAYS/TOTAL\", \"TOXCAST_PERCENT_ACTIVE\"),   massError = 0,   timeout = 300,   verify_ssl = getOption(\"ECOTOXr_verify_ssl\"),   ... )"},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch_comptox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search and retrieve substance information from https://comptox.epa.gov/dashboard — websearch_comptox","text":"searchItems vector characters element substance descriptor (selected identifierTypes) wish query. identifierTypes Substance identifiers searching CompTox. used inputType set \"IDENTIFIER\". inputType Type input used searching CompTox. See usage section valid entries. downloadItems Output fields CompTox data requested substances massError Error tolerance searching substances based monoisotopic mass. used inputType = \"MASS\". timeout Time seconds (default 300 secs), routine wait download link get ready. throw error takes longer specified timeout. verify_ssl set FALSE SSL certificate host (EPA) verified. Can also set option: options(ECOTOXr_verify_ssl = TRUE). Default TRUE. ... Arguments passed httr2::req_options() requests.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch_comptox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search and retrieve substance information from https://comptox.epa.gov/dashboard — websearch_comptox","text":"Returns named list dplyr::tibbles containing search results requested output tables fields. Results unpolished `' returned EPA's web service.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch_comptox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search and retrieve substance information from https://comptox.epa.gov/dashboard — websearch_comptox","text":"CompTox Chemicals Dashboard freely accessible online U.S. EPA database. contains information physico-chemical properties, environmental fate transport, exposure, usage, vivo toxicity, vitro bioassay wide range substances. function described search retrieve records online database experimental. feature formally supported EPA, may break future incarnations online database. function forms interface R CompTox website therefore limited restrictions documented .","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch_comptox.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search and retrieve substance information from https://comptox.epa.gov/dashboard — websearch_comptox","text":"Official US EPA CompTox website: https://comptox.epa.gov/dashboard/ Williams, .J., Grulke, C.M., Edwards, J., McEachran, .D., Mansouri, K, Baker, N.C., Patlewicz, G., Shah, ., Wambaugh, J.F., Judson, R.S. & Richard, .M. (2017), CompTox Chemistry Dashboard: community data resource environmental chemistry. J Cheminform, 9(61) doi:10.1186/s13321-017-0247-6","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch_comptox.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Search and retrieve substance information from https://comptox.epa.gov/dashboard — websearch_comptox","text":"Pepijn de Vries","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/reference/websearch_comptox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search and retrieve substance information from https://comptox.epa.gov/dashboard — websearch_comptox","text":"","code":"if (interactive()){   ## search for substance name 'benzene' and CAS registration number 108-88-3   ## on https://comptox.epa.gov/dashboard:   comptox_results <- websearch_comptox(c(\"benzene\", \"108-88-3\"))    ## search for substances with monoisotopic mass of 100+/-5:   comptox_results2 <- websearch_comptox(\"100\", inputType = \"MASS\", massError = 5) }"},{"path":"https://pepijn-devries.github.io/ECOTOXr/news/index.html","id":"ecotoxr-v1200003","dir":"Changelog","previous_headings":"","what":"ECOTOXr v1.2.0.0003","title":"ECOTOXr v1.2.0.0003","text":"Improved test coverage Fixed error units conversion","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/news/index.html","id":"ecotoxr-v120","dir":"Changelog","previous_headings":"","what":"ECOTOXr v1.2.0","title":"ECOTOXr v1.2.0","text":"CRAN release: 2025-03-21 Added data sanitisers process_ecotox_numerics(), as_numeric_ecotox(), process_ecotox_units(), as_unit_ecotox(), process_ecotox_dates() as_date_ecotox() Expanded documentation vignettes Fixed check upon attach Correction database specifications Improved test coverage Tested 2025-03-13 release ECOTOX","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/news/index.html","id":"ecotoxr-v111","dir":"Changelog","previous_headings":"","what":"ECOTOXr v1.1.1","title":"ECOTOXr v1.1.1","text":"CRAN release: 2024-09-20 Added pkgdown generated website Updated documentation Updated database specifications 2024-09-12 release ECOTOX","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/news/index.html","id":"ecotoxr-v109","dir":"Changelog","previous_headings":"","what":"ECOTOXr v1.0.9","title":"ECOTOXr v1.0.9","text":"CRAN release: 2024-01-08 switched ‘magrittr’ pipe operator (%>%) R’s native pipe operator (|>) switched ‘httr’ ‘httr2’ dependency Added functions check local build version Fix database build routine Fix manual pass CRAN checks Explicit mentioning required versions dependencies","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/news/index.html","id":"ecotoxr-v105","dir":"Changelog","previous_headings":"","what":"ECOTOXr v1.0.5","title":"ECOTOXr v1.0.5","text":"CRAN release: 2023-10-09 Added verify_ssl argument online functions order make easier try avert failing certificate checks. Minor fix CAS handlers","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/news/index.html","id":"ecotoxr-v103","dir":"Changelog","previous_headings":"","what":"ECOTOXr v1.0.3","title":"ECOTOXr v1.0.3","text":"CRAN release: 2023-08-21 Adjustments pass latest CRAN checks","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/news/index.html","id":"ecotoxr-v102","dir":"Changelog","previous_headings":"","what":"ECOTOXr v1.0.2","title":"ECOTOXr v1.0.2","text":"CRAN release: 2023-06-18 Handling new fields tables introduced new release. Better handler unintended line-feed characters source material, building SQLite file. table primary key unique, update table latest occurrence key. also reported EPA. Keeping track missing tables fields, occurrence unexpected fields building. added build log file.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/news/index.html","id":"ecotoxr-v101","dir":"Changelog","previous_headings":"","what":"ECOTOXr v1.0.1","title":"ECOTOXr v1.0.1","text":"CRAN release: 2023-01-08 Experimental features online searching ECOTOX CompTox Switched roxygen2md documentation markdown format NEWS Added life-cycle badges minor fixes SQLite building routine December 2022 release ECOTOX","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/news/index.html","id":"ecotoxr-v020","dir":"Changelog","previous_headings":"","what":"ECOTOXr v0.2.0","title":"ECOTOXr v0.2.0","text":"CRAN release: 2022-11-17 Modified searching routines make advantage sql parser optimisers implemented package ‘dplyr’. Performance (.e. speed) search routines improved considerably. Added support handling Chemical Abstracts Service (CAS) numbers. Several minor adjustments corrections code manual. include fixes address notes CRAN checks.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/news/index.html","id":"ecotoxr-v011","dir":"Changelog","previous_headings":"","what":"ECOTOXr v0.1.1","title":"ECOTOXr v0.1.1","text":"CRAN release: 2021-10-05 Updates DESCRIPTION file manual order comply CRAN policies. Function progress reports now shown ‘message’ instead ‘cat’, can suppressed.","code":""},{"path":"https://pepijn-devries.github.io/ECOTOXr/news/index.html","id":"ecotoxr-v010","dir":"Changelog","previous_headings":"","what":"ECOTOXr v0.1.0","title":"ECOTOXr v0.1.0","text":"Download raw ECOTOX database tables EPA website Build SQLite database files Search extract data created local database","code":""}]
